Imports System
Imports System.Collections.Generic
Imports System.Drawing
Imports GTA
Imports GTA.Native
Imports GTA.Math
Imports System.Linq
Imports System.Text
Imports System.Threading.Tasks
Imports System.Reflection
Imports System.IO
Imports System.Windows.Forms
Imports SinglePlayerApartment.SinglePlayerApartment
Imports AnimationV
Imports System.Runtime.InteropServices

Public Class SixCarGarage
    Inherits Script

    Public Shared CurrentPath As String
    Public Shared playerHash As String
    Public Shared veh0, veh1, veh2, veh3, veh4, veh5 As Vehicle
    Public Shared LastLocationName As String
    Public Shared lastLocationVector As Vector3
    Public Shared lastLocationGarageVector As Vector3
    Public Shared lastLocationGarageOutVector As Vector3
    Public Shared lastLocationGarageOutHeading As Single
    Public Shared Elevator As Vector3 = New Vector3(207.1506, -998.9948, -98.9999)
    Public Shared GarageDoorL As Vector3 = New Vector3(202.2906, -1007.7249, -98.9992)
    Public Shared GarageDoorR As Vector3 = New Vector3(194.4465, -1007.7326, -98.9999)
    Public Shared GarageMiddle As Vector3 = New Vector3(197.9781, -1000.8287, -98.9999)
    Public Shared MenuActivator As Vector3 = New Vector3(204.6184, -994.6097, -99.9999)
    Public Shared ElevatorDistance As Single
    Public Shared GarageDoorLDistance As Single
    Public Shared GarageDoorRDistance As Single
    Public Shared GarageMiddleDistance As Single
    Public Shared GarageMarkerDistance As Single
    Public Shared veh0Pos As Vector3 = New Vector3(197.5, -1004.425, -99.99999)
    Public Shared veh1Pos As Vector3 = New Vector3(201.06, -1004.425, -99.99999)
    Public Shared veh2Pos As Vector3 = New Vector3(204.62, -1004.425, -99.99999)
    Public Shared veh3Pos As Vector3 = New Vector3(192.9262, -996.3292, -99.99999)
    Public Shared veh4Pos As Vector3 = New Vector3(197.5, -996.3292, -99.99999)
    Public Shared veh5Pos As Vector3 = New Vector3(203.9257, -999.1467, -99.99999)
    Public Shared vehRot02 As Vector3 = New Vector3(0.0001003991, 4.043804, -4.035995)
    Public Shared vehRot35 As Vector3 = New Vector3(9.383157, -5.855135, -146.2832)
    Public Shared GarageMarker As New Marker(MarkerType.VerticalCylinder, MenuActivator, Color.LightBlue, AnimationType.Normal)
    Public Shared isInGarage As Boolean = False

    Public Sub New()
        Try
            uiLanguage = Game.Language.ToString
            If uiLanguage = "Chinese" Then
                Garage = "車庫"
            Else
                Garage = " Garage"
            End If

            If playerHash = "225514697" Then
                playerName = "Michael"
            ElseIf playerHash = "-1692214353" Then
                playerName = "Franklin"
            ElseIf playerHash = "-1686040670" Then
                playerName = "Trevor"
            Else
                playerName = "None"
            End If

            AddHandler Tick, AddressOf OnTick

        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

#Region "LoadGarageVehicles"
    Public Shared Sub LoadGarageVehicle0(file As String, pos As Vector3, rot As Vector3, head As Single)
        Try
            If veh0 = Nothing Then
                veh0 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            Else
                veh0.Delete()
                veh0 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            End If

            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, veh0, 0)
            veh0.Rotation = rot
            veh0.DirtLevel = 0F
            veh0.PrimaryColor = ReadCfgValue("PrimaryColor", file)
            veh0.SecondaryColor = ReadCfgValue("SecondaryColor", file)
            veh0.PearlescentColor = ReadCfgValue("PearlescentColor", file)
            If ReadCfgValue("HasCustomPrimaryColor", file) = "True" Then veh0.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", file), ReadCfgValue("CustomPrimaryColorGreen", file), ReadCfgValue("CustomPrimaryColorBlue", file))
            If ReadCfgValue("HasCustomSecondaryColor", file) = "True" Then veh0.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", file), ReadCfgValue("CustomSecondaryColorGreen", file), ReadCfgValue("CustomSecondaryColorBlue", file))
            veh0.RimColor = ReadCfgValue("RimColor", file)
            If ReadCfgValue("HasNeonLightBack", file) = "True" Then veh0.SetNeonLightsOn(VehicleNeonLight.Back, True)
            If ReadCfgValue("HasNeonLightFront", file) = "True" Then veh0.SetNeonLightsOn(VehicleNeonLight.Front, True)
            If ReadCfgValue("HasNeonLightLeft", file) = "True" Then veh0.SetNeonLightsOn(VehicleNeonLight.Left, True)
            If ReadCfgValue("HasNeonLightRight", file) = "True" Then veh0.SetNeonLightsOn(VehicleNeonLight.Right, True)
            veh0.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", file), ReadCfgValue("NeonColorGreen", file), ReadCfgValue("NeonColorBlue", file))
            veh0.TireSmokeColor = Color.FromArgb(ReadCfgValue("TyreSmokeColorRed", file), ReadCfgValue("TyreSmokeColorGreen", file), ReadCfgValue("TyreSmokeColorBlue", file))
            veh0.WheelType = ReadCfgValue("WheelType", file)
            veh0.Livery = ReadCfgValue("Livery", file)
            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, veh0, CInt(ReadCfgValue("PlateType", file)))
            veh0.NumberPlate = ReadCfgValue("PlateNumber", file)
            veh0.WindowTint = ReadCfgValue("WindowTint", file)
            veh0.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", file), True)
            veh0.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", file), True)
            veh0.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", file), True)
            veh0.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", file), True)
            veh0.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", file), True)
            veh0.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", file), True)
            veh0.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", file), True)
            veh0.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", file), True)
            veh0.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", file), True)
            veh0.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", file), True)
            veh0.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", file), True)
            If ReadCfgValue("FrontTireVariation", file) = "True" Then veh0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), True) Else veh0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), False)
            If ReadCfgValue("BackTireVariation", file) = "True" Then veh0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), True) Else veh0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), False)
            veh0.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", file), True)
            veh0.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", file), True)
            veh0.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", file), True)
            veh0.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", file), True)
            veh0.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", file), True)
            veh0.SetMod(25, ReadCfgValue("TwentyFive", file), True)
            veh0.SetMod(26, ReadCfgValue("TwentySix", file), True)
            veh0.SetMod(27, ReadCfgValue("TwentySeven", file), True)
            veh0.SetMod(28, ReadCfgValue("TwentyEight", file), True)
            veh0.SetMod(29, ReadCfgValue("TwentyNine", file), True)
            veh0.SetMod(30, ReadCfgValue("Thirty", file), True)
            veh0.SetMod(31, ReadCfgValue("ThirtyOne", file), True)
            veh0.SetMod(32, ReadCfgValue("ThirtyTwo", file), True)
            veh0.SetMod(33, ReadCfgValue("ThirtyThree", file), True)
            veh0.SetMod(34, ReadCfgValue("ThirtyFour", file), True)
            veh0.SetMod(35, ReadCfgValue("ThirtyFive", file), True)
            veh0.SetMod(36, ReadCfgValue("ThirtySix", file), True)
            veh0.SetMod(37, ReadCfgValue("ThirtySeven", file), True)
            veh0.SetMod(38, ReadCfgValue("ThirtyEight", file), True)
            veh0.SetMod(39, ReadCfgValue("ThirtyNine", file), True)
            veh0.SetMod(40, ReadCfgValue("Forthy", file), True)
            veh0.SetMod(41, ReadCfgValue("ForthyOne", file), True)
            veh0.SetMod(42, ReadCfgValue("ForthyTwo", file), True)
            veh0.SetMod(43, ReadCfgValue("ForthyThree", file), True)
            veh0.SetMod(44, ReadCfgValue("ForthyFour", file), True)
            veh0.SetMod(45, ReadCfgValue("ForthyFive", file), True)
            veh0.SetMod(46, ReadCfgValue("ForthySix", file), True)
            veh0.SetMod(47, ReadCfgValue("ForthySeven", file), True)
            veh0.SetMod(48, ReadCfgValue("ForthyEight", file), True)
            If ReadCfgValue("XenonHeadlights", file) = "True" Then veh0.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
            If ReadCfgValue("Turbo", file) = "True" Then veh0.ToggleMod(VehicleToggleMod.Turbo, True)
            veh0.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", file), True)
            If ReadCfgValue("BulletproofTyres", file) = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, veh0, False)
            If ReadCfgValue("Active", file) = "True" Then veh0.Delete()
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    Public Shared Sub LoadGarageVehicle1(file As String, pos As Vector3, rot As Vector3, head As Single)
        Try
            If veh1 = Nothing Then
                veh1 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            Else
                veh1.Delete()
                veh1 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            End If

            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, veh1, 0)
            veh1.Rotation = rot
            veh1.DirtLevel = 0F
            veh1.PrimaryColor = ReadCfgValue("PrimaryColor", file)
            veh1.SecondaryColor = ReadCfgValue("SecondaryColor", file)
            veh1.PearlescentColor = ReadCfgValue("PearlescentColor", file)
            If ReadCfgValue("HasCustomPrimaryColor", file) = "True" Then veh1.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", file), ReadCfgValue("CustomPrimaryColorGreen", file), ReadCfgValue("CustomPrimaryColorBlue", file))
            If ReadCfgValue("HasCustomSecondaryColor", file) = "True" Then veh1.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", file), ReadCfgValue("CustomSecondaryColorGreen", file), ReadCfgValue("CustomSecondaryColorBlue", file))
            veh1.RimColor = ReadCfgValue("RimColor", file)
            If ReadCfgValue("HasNeonLightBack", file) = "True" Then veh1.SetNeonLightsOn(VehicleNeonLight.Back, True)
            If ReadCfgValue("HasNeonLightFront", file) = "True" Then veh1.SetNeonLightsOn(VehicleNeonLight.Front, True)
            If ReadCfgValue("HasNeonLightLeft", file) = "True" Then veh1.SetNeonLightsOn(VehicleNeonLight.Left, True)
            If ReadCfgValue("HasNeonLightRight", file) = "True" Then veh1.SetNeonLightsOn(VehicleNeonLight.Right, True)
            veh1.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", file), ReadCfgValue("NeonColorGreen", file), ReadCfgValue("NeonColorBlue", file))
            veh1.TireSmokeColor = Color.FromArgb(ReadCfgValue("TyreSmokeColorRed", file), ReadCfgValue("TyreSmokeColorGreen", file), ReadCfgValue("TyreSmokeColorBlue", file))
            veh1.WheelType = ReadCfgValue("WheelType", file)
            veh1.Livery = ReadCfgValue("Livery", file)
            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, veh1, CInt(ReadCfgValue("PlateType", file)))
            veh1.NumberPlate = ReadCfgValue("PlateNumber", file)
            veh1.WindowTint = ReadCfgValue("WindowTint", file)
            veh1.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", file), True)
            veh1.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", file), True)
            veh1.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", file), True)
            veh1.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", file), True)
            veh1.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", file), True)
            veh1.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", file), True)
            veh1.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", file), True)
            veh1.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", file), True)
            veh1.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", file), True)
            veh1.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", file), True)
            veh1.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", file), True)
            If ReadCfgValue("FrontTireVariation", file) = "True" Then veh1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), True) Else veh1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), False)
            If ReadCfgValue("BackTireVariation", file) = "True" Then veh1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), True) Else veh1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), False)
            veh1.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", file), True)
            veh1.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", file), True)
            veh1.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", file), True)
            veh1.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", file), True)
            veh1.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", file), True)
            veh1.SetMod(25, ReadCfgValue("TwentyFive", file), True)
            veh1.SetMod(26, ReadCfgValue("TwentySix", file), True)
            veh1.SetMod(27, ReadCfgValue("TwentySeven", file), True)
            veh1.SetMod(28, ReadCfgValue("TwentyEight", file), True)
            veh1.SetMod(29, ReadCfgValue("TwentyNine", file), True)
            veh1.SetMod(30, ReadCfgValue("Thirty", file), True)
            veh1.SetMod(31, ReadCfgValue("ThirtyOne", file), True)
            veh1.SetMod(32, ReadCfgValue("ThirtyTwo", file), True)
            veh1.SetMod(33, ReadCfgValue("ThirtyThree", file), True)
            veh1.SetMod(34, ReadCfgValue("ThirtyFour", file), True)
            veh1.SetMod(35, ReadCfgValue("ThirtyFive", file), True)
            veh1.SetMod(36, ReadCfgValue("ThirtySix", file), True)
            veh1.SetMod(37, ReadCfgValue("ThirtySeven", file), True)
            veh1.SetMod(38, ReadCfgValue("ThirtyEight", file), True)
            veh1.SetMod(39, ReadCfgValue("ThirtyNine", file), True)
            veh1.SetMod(40, ReadCfgValue("Forthy", file), True)
            veh1.SetMod(41, ReadCfgValue("ForthyOne", file), True)
            veh1.SetMod(42, ReadCfgValue("ForthyTwo", file), True)
            veh1.SetMod(43, ReadCfgValue("ForthyThree", file), True)
            veh1.SetMod(44, ReadCfgValue("ForthyFour", file), True)
            veh1.SetMod(45, ReadCfgValue("ForthyFive", file), True)
            veh1.SetMod(46, ReadCfgValue("ForthySix", file), True)
            veh1.SetMod(47, ReadCfgValue("ForthySeven", file), True)
            veh1.SetMod(48, ReadCfgValue("ForthyEight", file), True)
            If ReadCfgValue("XenonHeadlights", file) = "True" Then veh1.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
            If ReadCfgValue("Turbo", file) = "True" Then veh1.ToggleMod(VehicleToggleMod.Turbo, True)
            veh1.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", file), True)
            If ReadCfgValue("BulletproofTyres", file) = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, veh1, False)
            If ReadCfgValue("Active", file) = "True" Then veh1.Delete()
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    Public Shared Sub LoadGarageVehicle2(file As String, pos As Vector3, rot As Vector3, head As Single)
        Try
            If veh2 = Nothing Then
                veh2 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            Else
                veh2.Delete()
                veh2 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            End If

            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, veh2, 0)
            veh2.Rotation = rot
            veh2.DirtLevel = 0F
            veh2.PrimaryColor = ReadCfgValue("PrimaryColor", file)
            veh2.SecondaryColor = ReadCfgValue("SecondaryColor", file)
            veh2.PearlescentColor = ReadCfgValue("PearlescentColor", file)
            If ReadCfgValue("HasCustomPrimaryColor", file) = "True" Then veh2.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", file), ReadCfgValue("CustomPrimaryColorGreen", file), ReadCfgValue("CustomPrimaryColorBlue", file))
            If ReadCfgValue("HasCustomSecondaryColor", file) = "True" Then veh2.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", file), ReadCfgValue("CustomSecondaryColorGreen", file), ReadCfgValue("CustomSecondaryColorBlue", file))
            veh2.RimColor = ReadCfgValue("RimColor", file)
            If ReadCfgValue("HasNeonLightBack", file) = "True" Then veh2.SetNeonLightsOn(VehicleNeonLight.Back, True)
            If ReadCfgValue("HasNeonLightFront", file) = "True" Then veh2.SetNeonLightsOn(VehicleNeonLight.Front, True)
            If ReadCfgValue("HasNeonLightLeft", file) = "True" Then veh2.SetNeonLightsOn(VehicleNeonLight.Left, True)
            If ReadCfgValue("HasNeonLightRight", file) = "True" Then veh2.SetNeonLightsOn(VehicleNeonLight.Right, True)
            veh2.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", file), ReadCfgValue("NeonColorGreen", file), ReadCfgValue("NeonColorBlue", file))
            veh2.TireSmokeColor = Color.FromArgb(ReadCfgValue("TyreSmokeColorRed", file), ReadCfgValue("TyreSmokeColorGreen", file), ReadCfgValue("TyreSmokeColorBlue", file))
            veh2.WheelType = ReadCfgValue("WheelType", file)
            veh2.Livery = ReadCfgValue("Livery", file)
            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, veh2, CInt(ReadCfgValue("PlateType", file)))
            veh2.NumberPlate = ReadCfgValue("PlateNumber", file)
            veh2.WindowTint = ReadCfgValue("WindowTint", file)
            veh2.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", file), True)
            veh2.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", file), True)
            veh2.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", file), True)
            veh2.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", file), True)
            veh2.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", file), True)
            veh2.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", file), True)
            veh2.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", file), True)
            veh2.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", file), True)
            veh2.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", file), True)
            veh2.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", file), True)
            veh2.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", file), True)
            If ReadCfgValue("FrontTireVariation", file) = "True" Then veh2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), True) Else veh2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), False)
            If ReadCfgValue("BackTireVariation", file) = "True" Then veh2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), True) Else veh2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), False)
            veh2.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", file), True)
            veh2.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", file), True)
            veh2.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", file), True)
            veh2.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", file), True)
            veh2.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", file), True)
            veh2.SetMod(25, ReadCfgValue("TwentyFive", file), True)
            veh2.SetMod(26, ReadCfgValue("TwentySix", file), True)
            veh2.SetMod(27, ReadCfgValue("TwentySeven", file), True)
            veh2.SetMod(28, ReadCfgValue("TwentyEight", file), True)
            veh2.SetMod(29, ReadCfgValue("TwentyNine", file), True)
            veh2.SetMod(30, ReadCfgValue("Thirty", file), True)
            veh2.SetMod(31, ReadCfgValue("ThirtyOne", file), True)
            veh2.SetMod(32, ReadCfgValue("ThirtyTwo", file), True)
            veh2.SetMod(33, ReadCfgValue("ThirtyThree", file), True)
            veh2.SetMod(34, ReadCfgValue("ThirtyFour", file), True)
            veh2.SetMod(35, ReadCfgValue("ThirtyFive", file), True)
            veh2.SetMod(36, ReadCfgValue("ThirtySix", file), True)
            veh2.SetMod(37, ReadCfgValue("ThirtySeven", file), True)
            veh2.SetMod(38, ReadCfgValue("ThirtyEight", file), True)
            veh2.SetMod(39, ReadCfgValue("ThirtyNine", file), True)
            veh2.SetMod(40, ReadCfgValue("Forthy", file), True)
            veh2.SetMod(41, ReadCfgValue("ForthyOne", file), True)
            veh2.SetMod(42, ReadCfgValue("ForthyTwo", file), True)
            veh2.SetMod(43, ReadCfgValue("ForthyThree", file), True)
            veh2.SetMod(44, ReadCfgValue("ForthyFour", file), True)
            veh2.SetMod(45, ReadCfgValue("ForthyFive", file), True)
            veh2.SetMod(46, ReadCfgValue("ForthySix", file), True)
            veh2.SetMod(47, ReadCfgValue("ForthySeven", file), True)
            veh2.SetMod(48, ReadCfgValue("ForthyEight", file), True)
            If ReadCfgValue("XenonHeadlights", file) = "True" Then veh2.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
            If ReadCfgValue("Turbo", file) = "True" Then veh2.ToggleMod(VehicleToggleMod.Turbo, True)
            veh2.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", file), True)
            If ReadCfgValue("BulletproofTyres", file) = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, veh2, False)
            If ReadCfgValue("Active", file) = "True" Then veh2.Delete()
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    Public Shared Sub LoadGarageVehicle3(file As String, pos As Vector3, rot As Vector3, head As Single)
        Try
            If veh3 = Nothing Then
                veh3 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            Else
                veh3.Delete()
                veh3 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            End If

            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, veh3, 0)
            veh3.Rotation = rot
            veh3.DirtLevel = 0F
            veh3.PrimaryColor = ReadCfgValue("PrimaryColor", file)
            veh3.SecondaryColor = ReadCfgValue("SecondaryColor", file)
            veh3.PearlescentColor = ReadCfgValue("PearlescentColor", file)
            If ReadCfgValue("HasCustomPrimaryColor", file) = "True" Then veh3.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", file), ReadCfgValue("CustomPrimaryColorGreen", file), ReadCfgValue("CustomPrimaryColorBlue", file))
            If ReadCfgValue("HasCustomSecondaryColor", file) = "True" Then veh3.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", file), ReadCfgValue("CustomSecondaryColorGreen", file), ReadCfgValue("CustomSecondaryColorBlue", file))
            veh3.RimColor = ReadCfgValue("RimColor", file)
            If ReadCfgValue("HasNeonLightBack", file) = "True" Then veh3.SetNeonLightsOn(VehicleNeonLight.Back, True)
            If ReadCfgValue("HasNeonLightFront", file) = "True" Then veh3.SetNeonLightsOn(VehicleNeonLight.Front, True)
            If ReadCfgValue("HasNeonLightLeft", file) = "True" Then veh3.SetNeonLightsOn(VehicleNeonLight.Left, True)
            If ReadCfgValue("HasNeonLightRight", file) = "True" Then veh3.SetNeonLightsOn(VehicleNeonLight.Right, True)
            veh3.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", file), ReadCfgValue("NeonColorGreen", file), ReadCfgValue("NeonColorBlue", file))
            veh3.TireSmokeColor = Color.FromArgb(ReadCfgValue("TyreSmokeColorRed", file), ReadCfgValue("TyreSmokeColorGreen", file), ReadCfgValue("TyreSmokeColorBlue", file))
            veh3.WheelType = ReadCfgValue("WheelType", file)
            veh3.Livery = ReadCfgValue("Livery", file)
            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, veh3, CInt(ReadCfgValue("PlateType", file)))
            veh3.NumberPlate = ReadCfgValue("PlateNumber", file)
            veh3.WindowTint = ReadCfgValue("WindowTint", file)
            veh3.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", file), True)
            veh3.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", file), True)
            veh3.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", file), True)
            veh3.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", file), True)
            veh3.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", file), True)
            veh3.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", file), True)
            veh3.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", file), True)
            veh3.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", file), True)
            veh3.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", file), True)
            veh3.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", file), True)
            veh3.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", file), True)
            If ReadCfgValue("FrontTireVariation", file) = "True" Then veh3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), True) Else veh3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), False)
            If ReadCfgValue("BackTireVariation", file) = "True" Then veh3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), True) Else veh3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), False)
            veh3.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", file), True)
            veh3.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", file), True)
            veh3.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", file), True)
            veh3.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", file), True)
            veh3.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", file), True)
            veh3.SetMod(25, ReadCfgValue("TwentyFive", file), True)
            veh3.SetMod(26, ReadCfgValue("TwentySix", file), True)
            veh3.SetMod(27, ReadCfgValue("TwentySeven", file), True)
            veh3.SetMod(28, ReadCfgValue("TwentyEight", file), True)
            veh3.SetMod(29, ReadCfgValue("TwentyNine", file), True)
            veh3.SetMod(30, ReadCfgValue("Thirty", file), True)
            veh3.SetMod(31, ReadCfgValue("ThirtyOne", file), True)
            veh3.SetMod(32, ReadCfgValue("ThirtyTwo", file), True)
            veh3.SetMod(33, ReadCfgValue("ThirtyThree", file), True)
            veh3.SetMod(34, ReadCfgValue("ThirtyFour", file), True)
            veh3.SetMod(35, ReadCfgValue("ThirtyFive", file), True)
            veh3.SetMod(36, ReadCfgValue("ThirtySix", file), True)
            veh3.SetMod(37, ReadCfgValue("ThirtySeven", file), True)
            veh3.SetMod(38, ReadCfgValue("ThirtyEight", file), True)
            veh3.SetMod(39, ReadCfgValue("ThirtyNine", file), True)
            veh3.SetMod(40, ReadCfgValue("Forthy", file), True)
            veh3.SetMod(41, ReadCfgValue("ForthyOne", file), True)
            veh3.SetMod(42, ReadCfgValue("ForthyTwo", file), True)
            veh3.SetMod(43, ReadCfgValue("ForthyThree", file), True)
            veh3.SetMod(44, ReadCfgValue("ForthyFour", file), True)
            veh3.SetMod(45, ReadCfgValue("ForthyFive", file), True)
            veh3.SetMod(46, ReadCfgValue("ForthySix", file), True)
            veh3.SetMod(47, ReadCfgValue("ForthySeven", file), True)
            veh3.SetMod(48, ReadCfgValue("ForthyEight", file), True)
            If ReadCfgValue("XenonHeadlights", file) = "True" Then veh3.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
            If ReadCfgValue("Turbo", file) = "True" Then veh3.ToggleMod(VehicleToggleMod.Turbo, True)
            veh3.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", file), True)
            If ReadCfgValue("BulletproofTyres", file) = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, veh3, False)
            If ReadCfgValue("Active", file) = "True" Then veh3.Delete()
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    Public Shared Sub LoadGarageVehicle4(file As String, pos As Vector3, rot As Vector3, head As Single)
        Try
            If veh4 = Nothing Then
                veh4 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            Else
                veh4.Delete()
                veh4 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            End If

            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, veh4, 0)
            veh4.Rotation = rot
            veh4.DirtLevel = 0F
            veh4.PrimaryColor = ReadCfgValue("PrimaryColor", file)
            veh4.SecondaryColor = ReadCfgValue("SecondaryColor", file)
            veh4.PearlescentColor = ReadCfgValue("PearlescentColor", file)
            If ReadCfgValue("HasCustomPrimaryColor", file) = "True" Then veh4.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", file), ReadCfgValue("CustomPrimaryColorGreen", file), ReadCfgValue("CustomPrimaryColorBlue", file))
            If ReadCfgValue("HasCustomSecondaryColor", file) = "True" Then veh4.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", file), ReadCfgValue("CustomSecondaryColorGreen", file), ReadCfgValue("CustomSecondaryColorBlue", file))
            veh4.RimColor = ReadCfgValue("RimColor", file)
            If ReadCfgValue("HasNeonLightBack", file) = "True" Then veh4.SetNeonLightsOn(VehicleNeonLight.Back, True)
            If ReadCfgValue("HasNeonLightFront", file) = "True" Then veh4.SetNeonLightsOn(VehicleNeonLight.Front, True)
            If ReadCfgValue("HasNeonLightLeft", file) = "True" Then veh4.SetNeonLightsOn(VehicleNeonLight.Left, True)
            If ReadCfgValue("HasNeonLightRight", file) = "True" Then veh4.SetNeonLightsOn(VehicleNeonLight.Right, True)
            veh4.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", file), ReadCfgValue("NeonColorGreen", file), ReadCfgValue("NeonColorBlue", file))
            veh4.TireSmokeColor = Color.FromArgb(ReadCfgValue("TyreSmokeColorRed", file), ReadCfgValue("TyreSmokeColorGreen", file), ReadCfgValue("TyreSmokeColorBlue", file))
            veh4.WheelType = ReadCfgValue("WheelType", file)
            veh4.Livery = ReadCfgValue("Livery", file)
            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, veh4, CInt(ReadCfgValue("PlateType", file)))
            veh4.NumberPlate = ReadCfgValue("PlateNumber", file)
            veh4.WindowTint = ReadCfgValue("WindowTint", file)
            veh4.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", file), True)
            veh4.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", file), True)
            veh4.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", file), True)
            veh4.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", file), True)
            veh4.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", file), True)
            veh4.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", file), True)
            veh4.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", file), True)
            veh4.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", file), True)
            veh4.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", file), True)
            veh4.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", file), True)
            veh4.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", file), True)
            If ReadCfgValue("FrontTireVariation", file) = "True" Then veh4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), True) Else veh4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), False)
            If ReadCfgValue("BackTireVariation", file) = "True" Then veh4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), True) Else veh4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), False)
            veh4.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", file), True)
            veh4.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", file), True)
            veh4.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", file), True)
            veh4.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", file), True)
            veh4.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", file), True)
            veh4.SetMod(25, ReadCfgValue("TwentyFive", file), True)
            veh4.SetMod(26, ReadCfgValue("TwentySix", file), True)
            veh4.SetMod(27, ReadCfgValue("TwentySeven", file), True)
            veh4.SetMod(28, ReadCfgValue("TwentyEight", file), True)
            veh4.SetMod(29, ReadCfgValue("TwentyNine", file), True)
            veh4.SetMod(30, ReadCfgValue("Thirty", file), True)
            veh4.SetMod(31, ReadCfgValue("ThirtyOne", file), True)
            veh4.SetMod(32, ReadCfgValue("ThirtyTwo", file), True)
            veh4.SetMod(33, ReadCfgValue("ThirtyThree", file), True)
            veh4.SetMod(34, ReadCfgValue("ThirtyFour", file), True)
            veh4.SetMod(35, ReadCfgValue("ThirtyFive", file), True)
            veh4.SetMod(36, ReadCfgValue("ThirtySix", file), True)
            veh4.SetMod(37, ReadCfgValue("ThirtySeven", file), True)
            veh4.SetMod(38, ReadCfgValue("ThirtyEight", file), True)
            veh4.SetMod(39, ReadCfgValue("ThirtyNine", file), True)
            veh4.SetMod(40, ReadCfgValue("Forthy", file), True)
            veh4.SetMod(41, ReadCfgValue("ForthyOne", file), True)
            veh4.SetMod(42, ReadCfgValue("ForthyTwo", file), True)
            veh4.SetMod(43, ReadCfgValue("ForthyThree", file), True)
            veh4.SetMod(44, ReadCfgValue("ForthyFour", file), True)
            veh4.SetMod(45, ReadCfgValue("ForthyFive", file), True)
            veh4.SetMod(46, ReadCfgValue("ForthySix", file), True)
            veh4.SetMod(47, ReadCfgValue("ForthySeven", file), True)
            veh4.SetMod(48, ReadCfgValue("ForthyEight", file), True)
            If ReadCfgValue("XenonHeadlights", file) = "True" Then veh4.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
            If ReadCfgValue("Turbo", file) = "True" Then veh4.ToggleMod(VehicleToggleMod.Turbo, True)
            veh4.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", file), True)
            If ReadCfgValue("BulletproofTyres", file) = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, veh4, False)
            If ReadCfgValue("Active", file) = "True" Then veh4.Delete()
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    Public Shared Sub LoadGarageVehicle5(file As String, pos As Vector3, rot As Vector3, head As Single)
        Try
            If veh5 = Nothing Then
                veh5 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            Else
                veh5.Delete()
                veh5 = World.CreateVehicle(ReadCfgValue("VehicleModel", file), pos, head)
            End If

            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, veh5, 0)
            veh5.Rotation = rot
            veh5.DirtLevel = 0F
            veh5.PrimaryColor = ReadCfgValue("PrimaryColor", file)
            veh5.SecondaryColor = ReadCfgValue("SecondaryColor", file)
            veh5.PearlescentColor = ReadCfgValue("PearlescentColor", file)
            If ReadCfgValue("HasCustomPrimaryColor", file) = "True" Then veh5.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", file), ReadCfgValue("CustomPrimaryColorGreen", file), ReadCfgValue("CustomPrimaryColorBlue", file))
            If ReadCfgValue("HasCustomSecondaryColor", file) = "True" Then veh5.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", file), ReadCfgValue("CustomSecondaryColorGreen", file), ReadCfgValue("CustomSecondaryColorBlue", file))
            veh5.RimColor = ReadCfgValue("RimColor", file)
            If ReadCfgValue("HasNeonLightBack", file) = "True" Then veh5.SetNeonLightsOn(VehicleNeonLight.Back, True)
            If ReadCfgValue("HasNeonLightFront", file) = "True" Then veh5.SetNeonLightsOn(VehicleNeonLight.Front, True)
            If ReadCfgValue("HasNeonLightLeft", file) = "True" Then veh5.SetNeonLightsOn(VehicleNeonLight.Left, True)
            If ReadCfgValue("HasNeonLightRight", file) = "True" Then veh5.SetNeonLightsOn(VehicleNeonLight.Right, True)
            veh5.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", file), ReadCfgValue("NeonColorGreen", file), ReadCfgValue("NeonColorBlue", file))
            veh5.TireSmokeColor = Color.FromArgb(ReadCfgValue("TyreSmokeColorRed", file), ReadCfgValue("TyreSmokeColorGreen", file), ReadCfgValue("TyreSmokeColorBlue", file))
            veh5.WheelType = ReadCfgValue("WheelType", file)
            veh5.Livery = ReadCfgValue("Livery", file)
            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, veh5, CInt(ReadCfgValue("PlateType", file)))
            veh5.NumberPlate = ReadCfgValue("PlateNumber", file)
            veh5.WindowTint = ReadCfgValue("WindowTint", file)
            veh5.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", file), True)
            veh5.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", file), True)
            veh5.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", file), True)
            veh5.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", file), True)
            veh5.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", file), True)
            veh5.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", file), True)
            veh5.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", file), True)
            veh5.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", file), True)
            veh5.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", file), True)
            veh5.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", file), True)
            veh5.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", file), True)
            If ReadCfgValue("FrontTireVariation", file) = "True" Then veh5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), True) Else veh5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", file), False)
            If ReadCfgValue("BackTireVariation", file) = "True" Then veh5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), True) Else veh5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", file), False)
            veh5.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", file), True)
            veh5.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", file), True)
            veh5.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", file), True)
            veh5.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", file), True)
            veh5.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", file), True)
            veh5.SetMod(25, ReadCfgValue("TwentyFive", file), True)
            veh5.SetMod(26, ReadCfgValue("TwentySix", file), True)
            veh5.SetMod(27, ReadCfgValue("TwentySeven", file), True)
            veh5.SetMod(28, ReadCfgValue("TwentyEight", file), True)
            veh5.SetMod(29, ReadCfgValue("TwentyNine", file), True)
            veh5.SetMod(30, ReadCfgValue("Thirty", file), True)
            veh5.SetMod(31, ReadCfgValue("ThirtyOne", file), True)
            veh5.SetMod(32, ReadCfgValue("ThirtyTwo", file), True)
            veh5.SetMod(33, ReadCfgValue("ThirtyThree", file), True)
            veh5.SetMod(34, ReadCfgValue("ThirtyFour", file), True)
            veh5.SetMod(35, ReadCfgValue("ThirtyFive", file), True)
            veh5.SetMod(36, ReadCfgValue("ThirtySix", file), True)
            veh5.SetMod(37, ReadCfgValue("ThirtySeven", file), True)
            veh5.SetMod(38, ReadCfgValue("ThirtyEight", file), True)
            veh5.SetMod(39, ReadCfgValue("ThirtyNine", file), True)
            veh5.SetMod(40, ReadCfgValue("Forthy", file), True)
            veh5.SetMod(41, ReadCfgValue("ForthyOne", file), True)
            veh5.SetMod(42, ReadCfgValue("ForthyTwo", file), True)
            veh5.SetMod(43, ReadCfgValue("ForthyThree", file), True)
            veh5.SetMod(44, ReadCfgValue("ForthyFour", file), True)
            veh5.SetMod(45, ReadCfgValue("ForthyFive", file), True)
            veh5.SetMod(46, ReadCfgValue("ForthySix", file), True)
            veh5.SetMod(47, ReadCfgValue("ForthySeven", file), True)
            veh5.SetMod(48, ReadCfgValue("ForthyEight", file), True)
            If ReadCfgValue("XenonHeadlights", file) = "True" Then veh5.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
            If ReadCfgValue("Turbo", file) = "True" Then veh5.ToggleMod(VehicleToggleMod.Turbo, True)
            veh5.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", file), True)
            If ReadCfgValue("BulletproofTyres", file) = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, veh5, False)
            If ReadCfgValue("Active", file) = "True" Then veh5.Delete()
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub
#End Region

    Public Shared Sub LoadGarageVechicles(file As String)
        Try
            If Not veh0 = Nothing Then veh0.Delete()
            If Not veh1 = Nothing Then veh1.Delete()
            If Not veh2 = Nothing Then veh2.Delete()
            If Not veh3 = Nothing Then veh3.Delete()
            If Not veh4 = Nothing Then veh4.Delete()
            If Not veh5 = Nothing Then veh5.Delete()

            If IO.File.Exists(file & "vehicle_0.cfg") Then LoadGarageVehicle0(file & "vehicle_0.cfg", veh0Pos, vehRot02, -60)
            If IO.File.Exists(file & "vehicle_1.cfg") Then LoadGarageVehicle1(file & "vehicle_1.cfg", veh1Pos, vehRot02, -60)
            If IO.File.Exists(file & "vehicle_2.cfg") Then LoadGarageVehicle2(file & "vehicle_2.cfg", veh2Pos, vehRot02, -60)
            If IO.File.Exists(file & "vehicle_3.cfg") Then LoadGarageVehicle3(file & "vehicle_3.cfg", veh3Pos, vehRot35, -60)
            If IO.File.Exists(file & "vehicle_4.cfg") Then LoadGarageVehicle4(file & "vehicle_4.cfg", veh4Pos, vehRot35, -60)
            If IO.File.Exists(file & "vehicle_5.cfg") Then LoadGarageVehicle5(file & "vehicle_5.cfg", veh5Pos, vehRot35, -60)

            Mechanic.Path = file
            Mechanic.CreateGarageMenu(file)
            AddHandler Mechanic.GarageMenu.OnItemSelect, AddressOf Mechanic.ItemSelectHandler

            veh0.MarkAsNoLongerNeeded()
            veh1.MarkAsNoLongerNeeded()
            veh2.MarkAsNoLongerNeeded()
            veh3.MarkAsNoLongerNeeded()
            veh4.MarkAsNoLongerNeeded()
            veh5.MarkAsNoLongerNeeded()
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    Public Shared Sub SaveGarageVehicle(file As String)
        Try
            If Not IO.File.Exists(file & "vehicle_0.cfg") Then
                IO.File.WriteAllText(file & "vehicle_0.cfg", My.Resources.vehicle)
                UpdateGarageVehicle(file & "vehicle_0.cfg", "False")
                LoadGarageVehicle0(file & "vehicle_0.cfg", veh0Pos, vehRot02, -60)
                Game.FadeScreenOut(500)
                Script.Wait(&H3E8)
                playerPed.CurrentVehicle.Delete()
                If Not veh0 = Nothing Then
                    playerPed.Position = veh0Pos
                    playerPed.SetIntoVehicle(veh0, VehicleSeat.Driver)
                Else
                    playerPed.Position = veh0Pos
                End If
                Script.Wait(500)
                Game.FadeScreenIn(500)
                playerPed.Task.LeaveVehicle(playerPed.CurrentVehicle, True)
            Else
                If Not IO.File.Exists(file & "vehicle_1.cfg") Then
                    IO.File.WriteAllText(file & "vehicle_1.cfg", My.Resources.vehicle)
                    UpdateGarageVehicle(file & "vehicle_1.cfg", "False")
                    LoadGarageVehicle1(file & "vehicle_1.cfg", veh1Pos, vehRot02, -60)
                    Game.FadeScreenOut(500)
                    Script.Wait(&H3E8)
                    playerPed.CurrentVehicle.Delete()
                    If Not veh1 = Nothing Then
                        playerPed.Position = veh1Pos
                        playerPed.SetIntoVehicle(veh1, VehicleSeat.Driver)
                    Else
                        playerPed.Position = veh1Pos
                    End If
                    Script.Wait(500)
                    Game.FadeScreenIn(500)
                    playerPed.Task.LeaveVehicle(playerPed.CurrentVehicle, True)
                Else
                    If Not IO.File.Exists(file & "vehicle_2.cfg") Then
                        IO.File.WriteAllText(file & "vehicle_2.cfg", My.Resources.vehicle)
                        UpdateGarageVehicle(file & "vehicle_2.cfg", "False")
                        LoadGarageVehicle2(file & "vehicle_2.cfg", veh2Pos, vehRot02, -60)
                        Game.FadeScreenOut(500)
                        Script.Wait(&H3E8)
                        playerPed.CurrentVehicle.Delete()
                        If Not veh2 = Nothing Then
                            playerPed.Position = veh2Pos
                            playerPed.SetIntoVehicle(veh2, VehicleSeat.Driver)
                        Else
                            playerPed.Position = veh2Pos
                        End If
                        Script.Wait(500)
                        Game.FadeScreenIn(500)
                        playerPed.Task.LeaveVehicle(playerPed.CurrentVehicle, True)
                    Else
                        If Not IO.File.Exists(file & "vehicle_3.cfg") Then
                            IO.File.WriteAllText(file & "vehicle_3.cfg", My.Resources.vehicle)
                            UpdateGarageVehicle(file & "vehicle_3.cfg", "False")
                            LoadGarageVehicle3(file & "vehicle_3.cfg", veh3Pos, vehRot35, -60)
                            Game.FadeScreenOut(500)
                            Script.Wait(&H3E8)
                            playerPed.CurrentVehicle.Delete()
                            If Not veh3 = Nothing Then
                                playerPed.Position = veh3Pos
                                playerPed.SetIntoVehicle(veh3, VehicleSeat.Driver)
                            Else
                                playerPed.Position = veh3Pos
                            End If
                            Script.Wait(500)
                            Game.FadeScreenIn(500)
                            playerPed.Task.LeaveVehicle(playerPed.CurrentVehicle, True)
                        Else
                            If Not IO.File.Exists(file & "vehicle_4.cfg") Then
                                IO.File.WriteAllText(file & "vehicle_4.cfg", My.Resources.vehicle)
                                UpdateGarageVehicle(file & "vehicle_4.cfg", "False")
                                LoadGarageVehicle4(file & "vehicle_4.cfg", veh4Pos, vehRot35, -60)
                                Game.FadeScreenOut(500)
                                Script.Wait(&H3E8)
                                playerPed.CurrentVehicle.Delete()
                                If Not veh4 = Nothing Then
                                    playerPed.Position = veh4Pos
                                    playerPed.SetIntoVehicle(veh4, VehicleSeat.Driver)
                                Else
                                    playerPed.Position = veh4Pos
                                End If
                                Script.Wait(500)
                                Game.FadeScreenIn(500)
                                playerPed.Task.LeaveVehicle(playerPed.CurrentVehicle, True)
                            Else
                                If Not IO.File.Exists(file & "vehicle_5.cfg") Then
                                    IO.File.WriteAllText(file & "vehicle_5.cfg", My.Resources.vehicle)
                                    UpdateGarageVehicle(file & "vehicle_5.cfg", "False")
                                    LoadGarageVehicle5(file & "vehicle_5.cfg", veh5Pos, vehRot35, -60)
                                    Game.FadeScreenOut(500)
                                    Script.Wait(&H3E8)
                                    playerPed.CurrentVehicle.Delete()
                                    If Not veh5 = Nothing Then
                                        playerPed.Position = veh5Pos
                                        playerPed.SetIntoVehicle(veh5, VehicleSeat.Driver)
                                    Else
                                        playerPed.Position = veh5Pos
                                    End If
                                    Script.Wait(500)
                                    Game.FadeScreenIn(500)
                                    playerPed.Task.LeaveVehicle(playerPed.CurrentVehicle, True)
                                Else
                                    If uiLanguage = "Chinese" Then
                                        UI.ShowSubtitle("車庫~r~已滿~w~。")
                                    Else
                                        UI.ShowSubtitle("Garage ~r~Full~w~.")
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
            End If
        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    <StructLayout(LayoutKind.Explicit)>
    Public Structure UnionInt32
        <FieldOffset(0)>
        Public IntValue As Int32
        <FieldOffset(0)>
        Public UIntValue As UInt32
    End Structure

    Public Shared Sub UpdateGarageVehicle(file As String, Active As String)
        WriteCfgValue("VehicleName", playerPed.CurrentVehicle.FriendlyName, file)
        'Lowriders DLC
        If playerPed.CurrentVehicle.Model.GetHashCode() = -1013450936 Then
            WriteCfgValue("VehicleModel", "BUCCANEER2", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -1361687965 Then
            WriteCfgValue("VehicleModel", "CHINO2", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -2119578145 Then
            WriteCfgValue("VehicleModel", "FACTION", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -1790546981 Then
            WriteCfgValue("VehicleModel", "FACTION2", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 525509695 Then
            WriteCfgValue("VehicleModel", "MOONBEAM", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 1896491931 Then
            WriteCfgValue("VehicleModel", "MOONBEAM2", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 2006667053 Then
            WriteCfgValue("VehicleModel", "VOODOO", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -2040426790 Then
            WriteCfgValue("VehicleModel", "PRIMO2", file)
            'Halloween Surprise DLC
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 2068293287 Then
            WriteCfgValue("VehicleModel", "LURCHER", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -831834716 Then
            WriteCfgValue("VehicleModel", "BTYPE2", file)
            'Executives and other criminals DLC
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 1102544804 Then
            WriteCfgValue("VehicleModel", "VERLIERER2", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -1943285540 Then
            WriteCfgValue("VehicleModel", "NIGHTSHADE", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -1660945322 Then
            WriteCfgValue("VehicleModel", "MAMBA", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -114627507 Then
            WriteCfgValue("VehicleModel", "LIMO2", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -1485523546 Then
            WriteCfgValue("VehicleModel", "SCHAFTER3", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 1489967196 Then
            WriteCfgValue("VehicleModel", "SCHAFTER4", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -888242983 Then
            WriteCfgValue("VehicleModel", "SCHAFTER5", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 1922255844 Then
            WriteCfgValue("VehicleModel", "SCHAFTER6", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 906642318 Then
            WriteCfgValue("VehicleModel", "COG55", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 704435172 Then
            WriteCfgValue("VehicleModel", "COG552", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -2030171296 Then
            WriteCfgValue("VehicleModel", "COGNOSCENTI", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = -604842630 Then
            WriteCfgValue("VehicleModel", "COGNOSCENTI2", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 1878062887 Then
            WriteCfgValue("VehicleModel", "BALLER3", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 634118882 Then
            WriteCfgValue("VehicleModel", "BALLER4", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 470404958 Then
            WriteCfgValue("VehicleModel", "BALLER5", file)
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 666166960 Then
            WriteCfgValue("VehicleModel", "BALLER6", file)
            'Christmas 2015 DLC
        ElseIf playerPed.CurrentVehicle.Model.GetHashCode() = 972671128 Then
            WriteCfgValue("VehicleModel", "TAMPA", file)
        Else
            If Resources.Dictionary.ContainsKey(playerPed.CurrentVehicle.Model.GetHashCode()) Then
                WriteCfgValue("VehicleModel", Resources.Dictionary.Item(playerPed.CurrentVehicle.Model.Hash), file)
            Else
                Dim VhNames As Array = GTA.Native.VehicleHash.GetNames(GetType(VehicleHash))
                Dim VhHash As Array = GTA.Native.VehicleHash.GetValues(GetType(VehicleHash))
                Dim tmpUint As UnionInt32
                tmpUint.IntValue = Game.Player.Character.CurrentVehicle.Model.Hash
                Dim UIntVal As UInt32 = tmpUint.UIntValue

                For i = 0 To UBound(VhHash)
                    If VhHash(i) = UIntVal Then
                        WriteCfgValue("VehicleModel", VhNames(i), file)
                        Exit For
                    End If
                Next
            End If
        End If
        WriteCfgValue("PrimaryColor", playerPed.CurrentVehicle.PrimaryColor, file)
        WriteCfgValue("SecondaryColor", playerPed.CurrentVehicle.SecondaryColor, file)
        WriteCfgValue("PearlescentColor", playerPed.CurrentVehicle.PearlescentColor, file)
        WriteCfgValue("HasCustomPrimaryColor", playerPed.CurrentVehicle.IsPrimaryColorCustom, file)
        WriteCfgValue("HasCustomSecondaryColor", playerPed.CurrentVehicle.IsSecondaryColorCustom, file)
        WriteCfgValue("CustomPrimaryColorRed", playerPed.CurrentVehicle.CustomPrimaryColor.R, file)
        WriteCfgValue("CustomPrimaryColorGreen", playerPed.CurrentVehicle.CustomPrimaryColor.G, file)
        WriteCfgValue("CustomPrimaryColorBlue", playerPed.CurrentVehicle.CustomPrimaryColor.B, file)
        WriteCfgValue("CustomSecondaryColorRed", playerPed.CurrentVehicle.CustomSecondaryColor.R, file)
        WriteCfgValue("CustomSecondaryColorGreen", playerPed.CurrentVehicle.CustomSecondaryColor.G, file)
        WriteCfgValue("CustomSecondaryColorBlue", playerPed.CurrentVehicle.CustomSecondaryColor.B, file)
        WriteCfgValue("RimColor", playerPed.CurrentVehicle.RimColor, file)
        WriteCfgValue("HasNeonLightBack", playerPed.CurrentVehicle.IsNeonLightsOn(VehicleNeonLight.Back), file)
        WriteCfgValue("HasNeonLightFront", playerPed.CurrentVehicle.IsNeonLightsOn(VehicleNeonLight.Front), file)
        WriteCfgValue("HasNeonLightLeft", playerPed.CurrentVehicle.IsNeonLightsOn(VehicleNeonLight.Left), file)
        WriteCfgValue("HasNeonLightRight", playerPed.CurrentVehicle.IsNeonLightsOn(VehicleNeonLight.Right), file)
        WriteCfgValue("NeonColorRed", playerPed.CurrentVehicle.NeonLightsColor.R, file)
        WriteCfgValue("NeonColorGreen", playerPed.CurrentVehicle.NeonLightsColor.G, file)
        WriteCfgValue("NeonColorBlue", playerPed.CurrentVehicle.NeonLightsColor.B, file)
        WriteCfgValue("TyreSmokeColorRed", playerPed.CurrentVehicle.TireSmokeColor.R, file)
        WriteCfgValue("TyreSmokeColorGreen", playerPed.CurrentVehicle.TireSmokeColor.G, file)
        WriteCfgValue("TyreSmokeColorBlue", playerPed.CurrentVehicle.TireSmokeColor.B, file)
        WriteCfgValue("WheelType", playerPed.CurrentVehicle.WheelType, file)
        WriteCfgValue("Livery", playerPed.CurrentVehicle.Livery, file)
        WriteCfgValue("PlateType", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, playerPed.CurrentVehicle), file)
        WriteCfgValue("PlateNumber", playerPed.CurrentVehicle.NumberPlate, file)
        WriteCfgValue("WindowTint", playerPed.CurrentVehicle.WindowTint, file)
        WriteCfgValue("Spoiler", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 0), file)
        WriteCfgValue("FrontBumper", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 1), file)
        WriteCfgValue("RearBumper", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 2), file)
        WriteCfgValue("SideSkirt", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 3), file)
        WriteCfgValue("Frame", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 5), file)
        WriteCfgValue("Grille", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 6), file)
        WriteCfgValue("Hood", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 7), file)
        WriteCfgValue("Fender", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 8), file)
        WriteCfgValue("RightFender", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 9), file)
        WriteCfgValue("Roof", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 10), file)
        WriteCfgValue("Exhaust", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 4), file)
        WriteCfgValue("FrontWheels", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 23), file)
        WriteCfgValue("BackWheels", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 24), file)
        WriteCfgValue("Suspension", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 15), file)
        WriteCfgValue("Engine", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 11), file)
        WriteCfgValue("Brakes", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 12), file)
        WriteCfgValue("Transmission", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 13), file)
        WriteCfgValue("Armor", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 16), file)
        WriteCfgValue("XenonHeadlights", Native.Function.Call(Of Boolean)(Hash.IS_TOGGLE_MOD_ON, playerPed.CurrentVehicle, 22), file)
        WriteCfgValue("Turbo", Native.Function.Call(Of Boolean)(Hash.IS_TOGGLE_MOD_ON, playerPed.CurrentVehicle, 18), file)
        'Added on v1.1.3
        WriteCfgValue("Horn", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 14), file)
        WriteCfgValue("BulletproofTyres", Native.Function.Call(Of Boolean)(Hash.GET_VEHICLE_TYRES_CAN_BURST, playerPed.CurrentVehicle), file)
        WriteCfgValue("Active", Active, file)
        'Added on v1.2.1
        WriteCfgValue("FrontTireVariation", Native.Function.Call(Of Boolean)(Hash.GET_VEHICLE_MOD_VARIATION, playerPed.CurrentVehicle, 23), file)
        WriteCfgValue("BackTireVariation", Native.Function.Call(Of Boolean)(Hash.GET_VEHICLE_MOD_VARIATION, playerPed.CurrentVehicle, 24), file)
        WriteCfgValue("TwentyFive", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 25), file)
        WriteCfgValue("TwentySix", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 26), file)
        WriteCfgValue("TwentySeven", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 27), file)
        WriteCfgValue("TwentyEight", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 28), file)
        WriteCfgValue("TwentyNine", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 29), file)
        WriteCfgValue("Thirty", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 30), file)
        WriteCfgValue("ThirtyOne", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 31), file)
        WriteCfgValue("ThirtyTwo", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 32), file)
        WriteCfgValue("ThirtyThree", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 33), file)
        WriteCfgValue("ThirtyFour", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 34), file)
        WriteCfgValue("ThirtyFive", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 35), file)
        WriteCfgValue("ThirtySix", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 36), file)
        WriteCfgValue("ThirtySeven", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 37), file)
        WriteCfgValue("ThirtyEight", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 38), file)
        WriteCfgValue("ThirtyNine", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 39), file)
        WriteCfgValue("Forthy", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 40), file)
        WriteCfgValue("ForthyOne", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 41), file)
        WriteCfgValue("ForthyTwo", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 42), file)
        WriteCfgValue("ForthyThree", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 43), file)
        WriteCfgValue("ForthyFour", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 44), file)
        WriteCfgValue("ForthyFive", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 45), file)
        WriteCfgValue("ForthySix", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 46), file)
        WriteCfgValue("ForthySeven", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 47), file)
        WriteCfgValue("ForthyEight", Native.Function.Call(Of Integer)(Hash.GET_VEHICLE_MOD, playerPed.CurrentVehicle, 48), file)
    End Sub

    Public Sub OnTick(o As Object, e As EventArgs)
        Try
            ElevatorDistance = World.GetDistance(playerPed.Position, Elevator)
            GarageDoorLDistance = World.GetDistance(playerPed.Position, GarageDoorL)
            GarageDoorRDistance = World.GetDistance(playerPed.Position, GarageDoorR)
            GarageMiddleDistance = World.GetDistance(playerPed.Position, GarageMiddle)
            GarageMarkerDistance = World.GetDistance(playerPed.Position, MenuActivator)

            If isInGarage = True Then
                GarageMarker.Flag = RenderFlag.Nearby
                GarageMarker.Draw()
            End If

            If Not playerPed.IsInVehicle AndAlso Not playerPed.IsDead AndAlso ElevatorDistance < 3.0 Then
                If uiLanguage = "Chinese" Then
                    DisplayHelpTextThisFrame("按 ~INPUT_CONTEXT~ 進入" & LastLocationName & "。")
                Else
                    DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to enter " & LastLocationName)
                End If
            End If

            If Not playerPed.IsInVehicle AndAlso Not playerPed.IsDead AndAlso (GarageDoorLDistance < 3.0 Or GarageDoorRDistance < 3.0) Then
                If uiLanguage = "Chinese" Then
                    DisplayHelpTextThisFrame("按 ~INPUT_CONTEXT~ 離開" & Garage & "。")
                Else
                    DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to exit" & Garage)
                End If
            End If

            If Not playerPed.IsDead AndAlso GarageMarkerDistance < 3.0 Then
                If uiLanguage = "Chinese" Then
                    DisplayHelpTextThisFrame("按 ~INPUT_CONTEXT~ 管理車輛。")
                Else
                    DisplayHelpTextThisFrame("Press ~INPUT_CONTEXT~ to manage vehicles.")
                End If
            End If

            ControlsKeyDown()

        Catch ex As Exception
            logger.Log(ex.Message & " " & ex.StackTrace)
        End Try
    End Sub

    Public Sub ControlsKeyDown()
        On Error Resume Next
        If Game.IsControlJustPressed(0, GTA.Control.VehicleAccelerate) AndAlso playerPed.IsInVehicle AndAlso GarageMiddleDistance < 20.0 Then
            Dim PPCV As Integer = -1
            If playerPed.CurrentVehicle = veh0 Then
                WriteCfgValue("Active", "True", CurrentPath & "vehicle_0.cfg")
                PPCV = 0
            ElseIf playerPed.CurrentVehicle = veh1 Then
                WriteCfgValue("Active", "True", CurrentPath & "vehicle_1.cfg")
                PPCV = 1
            ElseIf playerPed.CurrentVehicle = veh2 Then
                WriteCfgValue("Active", "True", CurrentPath & "vehicle_2.cfg")
                PPCV = 2
            ElseIf playerPed.CurrentVehicle = veh3 Then
                WriteCfgValue("Active", "True", CurrentPath & "vehicle_3.cfg")
                PPCV = 3
            ElseIf playerPed.CurrentVehicle = veh4 Then
                WriteCfgValue("Active", "True", CurrentPath & "vehicle_4.cfg")
                PPCV = 4
            ElseIf playerPed.CurrentVehicle = veh5 Then
                WriteCfgValue("Active", "True", CurrentPath & "vehicle_5.cfg")
                PPCV = 5
            End If
            Game.FadeScreenOut(500)
            Script.Wait(&H3E8)

            playerPed.CurrentVehicle.Delete()
            If playerName = "Michael" Then
                If Mechanic.MPV1 = Nothing Then
                    Mechanic.MPV1 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                    Mechanic.MPV1.Heading = lastLocationGarageOutHeading
                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV1, 0)
                    Mechanic.MPV1.DirtLevel = 0F
                    Mechanic.MPV1.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.MPV1.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.MPV1.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    Mechanic.MPV1.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.SetNeonLightsOn(VehicleNeonLight.Back, True)
                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.SetNeonLightsOn(VehicleNeonLight.Front, True)
                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.SetNeonLightsOn(VehicleNeonLight.Left, True)
                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.SetNeonLightsOn(VehicleNeonLight.Right, True)
                    Mechanic.MPV1.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    Mechanic.MPV1.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                    Mechanic.MPV1.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.MPV1.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV1, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                    Mechanic.MPV1.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.MPV1.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.MPV1.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                    Mechanic.MPV1.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.MPV1.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV1.ToggleMod(VehicleToggleMod.Turbo, True)
                    Mechanic.MPV1.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV1, False)
                    Mechanic.MPV1.MarkAsNoLongerNeeded()
                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV1, True, False)
                    Mechanic.MPV1.AddBlip()
                    Mechanic.MPV1.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                    Mechanic.MPV1.CurrentBlip.Color = BlipColor.Blue
                    Mechanic.MPV1.CurrentBlip.IsShortRange = True
                    SetBlipName(Mechanic.MPV1.FriendlyName, Mechanic.MPV1.CurrentBlip)
                    playerPed.SetIntoVehicle(Mechanic.MPV1, VehicleSeat.Driver)
                Else
                    If Mechanic.MPV2 = Nothing Then
                        Mechanic.MPV2 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                        Mechanic.MPV2.Heading = lastLocationGarageOutHeading
                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV2, 0)
                        Mechanic.MPV2.DirtLevel = 0F
                        Mechanic.MPV2.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.MPV2.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.MPV2.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        Mechanic.MPV2.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.SetNeonLightsOn(VehicleNeonLight.Back, True)
                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.SetNeonLightsOn(VehicleNeonLight.Front, True)
                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.SetNeonLightsOn(VehicleNeonLight.Left, True)
                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.SetNeonLightsOn(VehicleNeonLight.Right, True)
                        Mechanic.MPV2.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        Mechanic.MPV2.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                        Mechanic.MPV2.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.MPV2.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV2, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                        Mechanic.MPV2.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.MPV2.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.MPV2.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                        Mechanic.MPV2.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.MPV2.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV2.ToggleMod(VehicleToggleMod.Turbo, True)
                        Mechanic.MPV2.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV2, False)
                        Mechanic.MPV2.MarkAsNoLongerNeeded()
                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV2, True, False)
                        Mechanic.MPV2.AddBlip()
                        Mechanic.MPV2.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                        Mechanic.MPV2.CurrentBlip.Color = BlipColor.Blue
                        Mechanic.MPV2.CurrentBlip.IsShortRange = True
                        SetBlipName(Mechanic.MPV2.FriendlyName, Mechanic.MPV2.CurrentBlip)
                        playerPed.SetIntoVehicle(Mechanic.MPV2, VehicleSeat.Driver)
                    Else
                        If Mechanic.MPV3 = Nothing Then
                            Mechanic.MPV3 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                            Mechanic.MPV3.Heading = lastLocationGarageOutHeading
                            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV3, 0)
                            Mechanic.MPV3.DirtLevel = 0F
                            Mechanic.MPV3.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.MPV3.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.MPV3.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            Mechanic.MPV3.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.SetNeonLightsOn(VehicleNeonLight.Back, True)
                            If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.SetNeonLightsOn(VehicleNeonLight.Front, True)
                            If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.SetNeonLightsOn(VehicleNeonLight.Left, True)
                            If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.SetNeonLightsOn(VehicleNeonLight.Right, True)
                            Mechanic.MPV3.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            Mechanic.MPV3.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                            Mechanic.MPV3.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.MPV3.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV3, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                            Mechanic.MPV3.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.MPV3.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.MPV3.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                            If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                            Mechanic.MPV3.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.MPV3.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                            If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV3.ToggleMod(VehicleToggleMod.Turbo, True)
                            Mechanic.MPV3.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV3, False)
                            Mechanic.MPV3.MarkAsNoLongerNeeded()
                            Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV3, True, False)
                            Mechanic.MPV3.AddBlip()
                            Mechanic.MPV3.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                            Mechanic.MPV3.CurrentBlip.Color = BlipColor.Blue
                            Mechanic.MPV3.CurrentBlip.IsShortRange = True
                            SetBlipName(Mechanic.MPV3.FriendlyName, Mechanic.MPV3.CurrentBlip)
                            playerPed.SetIntoVehicle(Mechanic.MPV3, VehicleSeat.Driver)
                        Else
                            If Mechanic.MPV4 = Nothing Then
                                Mechanic.MPV4 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                Mechanic.MPV4.Heading = lastLocationGarageOutHeading
                                Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV4, 0)
                                Mechanic.MPV4.DirtLevel = 0F
                                Mechanic.MPV4.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.MPV4.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.MPV4.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                Mechanic.MPV4.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                Mechanic.MPV4.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                Mechanic.MPV4.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                Mechanic.MPV4.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.MPV4.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV4, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                Mechanic.MPV4.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.MPV4.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.MPV4.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                Mechanic.MPV4.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.MPV4.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV4.ToggleMod(VehicleToggleMod.Turbo, True)
                                Mechanic.MPV4.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV4, False)
                                Mechanic.MPV4.MarkAsNoLongerNeeded()
                                Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV4, True, False)
                                Mechanic.MPV4.AddBlip()
                                Mechanic.MPV4.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                Mechanic.MPV4.CurrentBlip.Color = BlipColor.Blue
                                Mechanic.MPV4.CurrentBlip.IsShortRange = True
                                SetBlipName(Mechanic.MPV4.FriendlyName, Mechanic.MPV4.CurrentBlip)
                                playerPed.SetIntoVehicle(Mechanic.MPV4, VehicleSeat.Driver)
                            Else
                                If Mechanic.MPV5 = Nothing Then
                                    Mechanic.MPV5 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                    Mechanic.MPV5.Heading = lastLocationGarageOutHeading
                                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV5, 0)
                                    Mechanic.MPV5.DirtLevel = 0F
                                    Mechanic.MPV5.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.MPV5.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.MPV5.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    Mechanic.MPV5.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                    Mechanic.MPV5.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    Mechanic.MPV5.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                    Mechanic.MPV5.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.MPV5.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV5, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                    Mechanic.MPV5.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.MPV5.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.MPV5.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                    Mechanic.MPV5.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.MPV5.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV5.ToggleMod(VehicleToggleMod.Turbo, True)
                                    Mechanic.MPV5.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV5, False)
                                    Mechanic.MPV5.MarkAsNoLongerNeeded()
                                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV5, True, False)
                                    Mechanic.MPV5.AddBlip()
                                    Mechanic.MPV5.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                    Mechanic.MPV5.CurrentBlip.Color = BlipColor.Blue
                                    Mechanic.MPV5.CurrentBlip.IsShortRange = True
                                    SetBlipName(Mechanic.MPV5.FriendlyName, Mechanic.MPV5.CurrentBlip)
                                    playerPed.SetIntoVehicle(Mechanic.MPV5, VehicleSeat.Driver)
                                Else
                                    If Mechanic.MPV6 = Nothing Then
                                        Mechanic.MPV6 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                        Mechanic.MPV6.Heading = lastLocationGarageOutHeading
                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV6, 0)
                                        Mechanic.MPV6.DirtLevel = 0F
                                        Mechanic.MPV6.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.MPV6.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.MPV6.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        Mechanic.MPV6.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                        Mechanic.MPV6.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        Mechanic.MPV6.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                        Mechanic.MPV6.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.MPV6.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV6, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                        Mechanic.MPV6.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.MPV6.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.MPV6.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV6.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV6.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                        Mechanic.MPV6.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.MPV6.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV6.ToggleMod(VehicleToggleMod.Turbo, True)
                                        Mechanic.MPV6.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV6, False)
                                        Mechanic.MPV6.MarkAsNoLongerNeeded()
                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV6, True, False)
                                        Mechanic.MPV6.AddBlip()
                                        Mechanic.MPV6.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                        Mechanic.MPV6.CurrentBlip.Color = BlipColor.Blue
                                        Mechanic.MPV6.CurrentBlip.IsShortRange = True
                                        SetBlipName(Mechanic.MPV6.FriendlyName, Mechanic.MPV6.CurrentBlip)
                                        playerPed.SetIntoVehicle(Mechanic.MPV6, VehicleSeat.Driver)
                                    Else
                                        If Mechanic.MPV7 = Nothing Then
                                            Mechanic.MPV7 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                            Mechanic.MPV7.Heading = lastLocationGarageOutHeading
                                            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV7, 0)
                                            Mechanic.MPV7.DirtLevel = 0F
                                            Mechanic.MPV7.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.MPV7.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.MPV7.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            Mechanic.MPV7.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                            If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                            If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                            If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                            Mechanic.MPV7.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            Mechanic.MPV7.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                            Mechanic.MPV7.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.MPV7.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV7, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                            Mechanic.MPV7.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.MPV7.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.MPV7.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV7.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                            If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV7.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                            Mechanic.MPV7.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.MPV7.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                            If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV7.ToggleMod(VehicleToggleMod.Turbo, True)
                                            Mechanic.MPV7.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV7, False)
                                            Mechanic.MPV7.MarkAsNoLongerNeeded()
                                            Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV7, True, False)
                                            Mechanic.MPV7.AddBlip()
                                            Mechanic.MPV7.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                            Mechanic.MPV7.CurrentBlip.Color = BlipColor.Blue
                                            Mechanic.MPV7.CurrentBlip.IsShortRange = True
                                            SetBlipName(Mechanic.MPV7.FriendlyName, Mechanic.MPV7.CurrentBlip)
                                            playerPed.SetIntoVehicle(Mechanic.MPV7, VehicleSeat.Driver)
                                        Else
                                            If Mechanic.MPV8 = Nothing Then
                                                Mechanic.MPV8 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                Mechanic.MPV8.Heading = lastLocationGarageOutHeading
                                                Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV8, 0)
                                                Mechanic.MPV8.DirtLevel = 0F
                                                Mechanic.MPV8.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.MPV8.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.MPV8.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                Mechanic.MPV8.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                Mechanic.MPV8.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                Mechanic.MPV8.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                Mechanic.MPV8.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.MPV8.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV8, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                Mechanic.MPV8.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.MPV8.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.MPV8.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV8.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV8.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                Mechanic.MPV8.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.MPV8.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV8.ToggleMod(VehicleToggleMod.Turbo, True)
                                                Mechanic.MPV8.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV8, False)
                                                Mechanic.MPV8.MarkAsNoLongerNeeded()
                                                Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV8, True, False)
                                                Mechanic.MPV8.AddBlip()
                                                Mechanic.MPV8.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                Mechanic.MPV8.CurrentBlip.Color = BlipColor.Blue
                                                Mechanic.MPV8.CurrentBlip.IsShortRange = True
                                                SetBlipName(Mechanic.MPV8.FriendlyName, Mechanic.MPV8.CurrentBlip)
                                                playerPed.SetIntoVehicle(Mechanic.MPV8, VehicleSeat.Driver)
                                            Else
                                                If Mechanic.MPV9 = Nothing Then
                                                    Mechanic.MPV9 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                    Mechanic.MPV9.Heading = lastLocationGarageOutHeading
                                                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV9, 0)
                                                    Mechanic.MPV9.DirtLevel = 0F
                                                    Mechanic.MPV9.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.MPV9.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.MPV9.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    Mechanic.MPV9.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                    Mechanic.MPV9.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    Mechanic.MPV9.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                    Mechanic.MPV9.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.MPV9.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV9, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                    Mechanic.MPV9.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.MPV9.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.MPV9.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV9.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV9.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.MPV9.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV9.ToggleMod(VehicleToggleMod.Turbo, True)
                                                    Mechanic.MPV9.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV9, False)
                                                    Mechanic.MPV9.MarkAsNoLongerNeeded()
                                                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV9, True, False)
                                                    Mechanic.MPV9.AddBlip()
                                                    Mechanic.MPV9.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                    Mechanic.MPV9.CurrentBlip.Color = BlipColor.Blue
                                                    Mechanic.MPV9.CurrentBlip.IsShortRange = True
                                                    SetBlipName(Mechanic.MPV9.FriendlyName, Mechanic.MPV9.CurrentBlip)
                                                    playerPed.SetIntoVehicle(Mechanic.MPV9, VehicleSeat.Driver)
                                                Else
                                                    If Mechanic.MPV0 = Nothing Then
                                                        Mechanic.MPV0 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                        Mechanic.MPV0.Heading = lastLocationGarageOutHeading
                                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV0, 0)
                                                        Mechanic.MPV0.DirtLevel = 0F
                                                        Mechanic.MPV0.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.MPV0.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                        Mechanic.MPV0.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.MPV0.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.MPV0.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV0, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.MPV0.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.ToggleMod(VehicleToggleMod.Turbo, True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV0, False)
                                                        Mechanic.MPV0.MarkAsNoLongerNeeded()
                                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV0, True, False)
                                                        Mechanic.MPV0.AddBlip()
                                                        Mechanic.MPV0.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                        Mechanic.MPV0.CurrentBlip.Color = BlipColor.Blue
                                                        Mechanic.MPV0.CurrentBlip.IsShortRange = True
                                                        SetBlipName(Mechanic.MPV0.FriendlyName, Mechanic.MPV0.CurrentBlip)
                                                        playerPed.SetIntoVehicle(Mechanic.MPV0, VehicleSeat.Driver)
                                                    Else
                                                        Mechanic.MPV0 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                        Mechanic.MPV0.Heading = lastLocationGarageOutHeading
                                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.MPV0, 0)
                                                        Mechanic.MPV0.DirtLevel = 0F
                                                        Mechanic.MPV0.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.MPV0.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                        Mechanic.MPV0.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.MPV0.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.MPV0.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.MPV0, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.MPV0.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.MPV0.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.MPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.MPV0.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.MPV0.ToggleMod(VehicleToggleMod.Turbo, True)
                                                        Mechanic.MPV0.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.MPV0, False)
                                                        Mechanic.MPV0.MarkAsNoLongerNeeded()
                                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.MPV0, True, False)
                                                        Mechanic.MPV0.AddBlip()
                                                        Mechanic.MPV0.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                        Mechanic.MPV0.CurrentBlip.Color = BlipColor.Blue
                                                        Mechanic.MPV0.CurrentBlip.IsShortRange = True
                                                        SetBlipName(Mechanic.MPV0.FriendlyName, Mechanic.MPV0.CurrentBlip)
                                                        playerPed.SetIntoVehicle(Mechanic.MPV0, VehicleSeat.Driver)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
            ElseIf playerName = "Franklin" Then
                If Mechanic.FPV1 = Nothing Then
                    Mechanic.FPV1 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                    Mechanic.FPV1.Heading = lastLocationGarageOutHeading
                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV1, 0)
                    Mechanic.FPV1.DirtLevel = 0F
                    Mechanic.FPV1.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.FPV1.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.FPV1.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    Mechanic.FPV1.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.SetNeonLightsOn(VehicleNeonLight.Back, True)
                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.SetNeonLightsOn(VehicleNeonLight.Front, True)
                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.SetNeonLightsOn(VehicleNeonLight.Left, True)
                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.SetNeonLightsOn(VehicleNeonLight.Right, True)
                    Mechanic.FPV1.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    Mechanic.FPV1.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                    Mechanic.FPV1.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.FPV1.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV1, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                    Mechanic.FPV1.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.FPV1.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.FPV1.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                    Mechanic.FPV1.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.FPV1.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV1.ToggleMod(VehicleToggleMod.Turbo, True)
                    Mechanic.FPV1.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV1, False)
                    Mechanic.FPV1.MarkAsNoLongerNeeded()
                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV1, True, False)
                    Mechanic.FPV1.AddBlip()
                    Mechanic.FPV1.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                    Mechanic.FPV1.CurrentBlip.Color = BlipColor.Green
                    Mechanic.FPV1.CurrentBlip.IsShortRange = True
                    SetBlipName(Mechanic.FPV1.FriendlyName, Mechanic.FPV1.CurrentBlip)
                    playerPed.SetIntoVehicle(Mechanic.FPV1, VehicleSeat.Driver)
                Else
                    If Mechanic.FPV2 = Nothing Then
                        Mechanic.FPV2 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                        Mechanic.FPV2.Heading = lastLocationGarageOutHeading
                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV2, 0)
                        Mechanic.FPV2.DirtLevel = 0F
                        Mechanic.FPV2.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.FPV2.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.FPV2.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        Mechanic.FPV2.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.SetNeonLightsOn(VehicleNeonLight.Back, True)
                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.SetNeonLightsOn(VehicleNeonLight.Front, True)
                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.SetNeonLightsOn(VehicleNeonLight.Left, True)
                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.SetNeonLightsOn(VehicleNeonLight.Right, True)
                        Mechanic.FPV2.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        Mechanic.FPV2.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                        Mechanic.FPV2.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.FPV2.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV2, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                        Mechanic.FPV2.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.FPV2.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.FPV2.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                        Mechanic.FPV2.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.FPV2.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV2.ToggleMod(VehicleToggleMod.Turbo, True)
                        Mechanic.FPV2.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV2, False)
                        Mechanic.FPV2.MarkAsNoLongerNeeded()
                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV2, True, False)
                        Mechanic.FPV2.AddBlip()
                        Mechanic.FPV2.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                        Mechanic.FPV2.CurrentBlip.Color = BlipColor.Green
                        Mechanic.FPV2.CurrentBlip.IsShortRange = True
                        SetBlipName(Mechanic.FPV2.FriendlyName, Mechanic.FPV2.CurrentBlip)
                        playerPed.SetIntoVehicle(Mechanic.FPV2, VehicleSeat.Driver)
                    Else
                        If Mechanic.FPV3 = Nothing Then
                            Mechanic.FPV3 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                            Mechanic.FPV3.Heading = lastLocationGarageOutHeading
                            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV3, 0)
                            Mechanic.FPV3.DirtLevel = 0F
                            Mechanic.FPV3.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.FPV3.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.FPV3.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            Mechanic.FPV3.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.SetNeonLightsOn(VehicleNeonLight.Back, True)
                            If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.SetNeonLightsOn(VehicleNeonLight.Front, True)
                            If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.SetNeonLightsOn(VehicleNeonLight.Left, True)
                            If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.SetNeonLightsOn(VehicleNeonLight.Right, True)
                            Mechanic.FPV3.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            Mechanic.FPV3.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                            Mechanic.FPV3.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.FPV3.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV3, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                            Mechanic.FPV3.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.FPV3.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.FPV3.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                            If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                            Mechanic.FPV3.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.FPV3.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                            If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV3.ToggleMod(VehicleToggleMod.Turbo, True)
                            Mechanic.FPV3.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV3, False)
                            Mechanic.FPV3.MarkAsNoLongerNeeded()
                            Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV3, True, False)
                            Mechanic.FPV3.AddBlip()
                            Mechanic.FPV3.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                            Mechanic.FPV3.CurrentBlip.Color = BlipColor.Green
                            Mechanic.FPV3.CurrentBlip.IsShortRange = True
                            SetBlipName(Mechanic.FPV3.FriendlyName, Mechanic.FPV3.CurrentBlip)
                            playerPed.SetIntoVehicle(Mechanic.FPV3, VehicleSeat.Driver)
                        Else
                            If Mechanic.FPV4 = Nothing Then
                                Mechanic.FPV4 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                Mechanic.FPV4.Heading = lastLocationGarageOutHeading
                                Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV4, 0)
                                Mechanic.FPV4.DirtLevel = 0F
                                Mechanic.FPV4.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.FPV4.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.FPV4.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                Mechanic.FPV4.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                Mechanic.FPV4.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                Mechanic.FPV4.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                Mechanic.FPV4.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.FPV4.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV4, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                Mechanic.FPV4.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.FPV4.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.FPV4.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                Mechanic.FPV4.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.FPV4.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV4.ToggleMod(VehicleToggleMod.Turbo, True)
                                Mechanic.FPV4.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV4, False)
                                Mechanic.FPV4.MarkAsNoLongerNeeded()
                                Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV4, True, False)
                                Mechanic.FPV4.AddBlip()
                                Mechanic.FPV4.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                Mechanic.FPV4.CurrentBlip.Color = BlipColor.Green
                                Mechanic.FPV4.CurrentBlip.IsShortRange = True
                                SetBlipName(Mechanic.FPV4.FriendlyName, Mechanic.FPV4.CurrentBlip)
                                playerPed.SetIntoVehicle(Mechanic.FPV4, VehicleSeat.Driver)
                            Else
                                If Mechanic.FPV5 = Nothing Then
                                    Mechanic.FPV5 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                    Mechanic.FPV5.Heading = lastLocationGarageOutHeading
                                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV5, 0)
                                    Mechanic.FPV5.DirtLevel = 0F
                                    Mechanic.FPV5.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.FPV5.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.FPV5.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    Mechanic.FPV5.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                    Mechanic.FPV5.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    Mechanic.FPV5.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                    Mechanic.FPV5.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.FPV5.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV5, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                    Mechanic.FPV5.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.FPV5.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.FPV5.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                    Mechanic.FPV5.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.FPV5.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV5.ToggleMod(VehicleToggleMod.Turbo, True)
                                    Mechanic.FPV5.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV5, False)
                                    Mechanic.FPV5.MarkAsNoLongerNeeded()
                                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV5, True, False)
                                    Mechanic.FPV5.AddBlip()
                                    Mechanic.FPV5.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                    Mechanic.FPV5.CurrentBlip.Color = BlipColor.Green
                                    Mechanic.FPV5.CurrentBlip.IsShortRange = True
                                    SetBlipName(Mechanic.FPV5.FriendlyName, Mechanic.FPV5.CurrentBlip)
                                    playerPed.SetIntoVehicle(Mechanic.FPV5, VehicleSeat.Driver)
                                Else
                                    If Mechanic.FPV6 = Nothing Then
                                        Mechanic.FPV6 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                        Mechanic.FPV6.Heading = lastLocationGarageOutHeading
                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV6, 0)
                                        Mechanic.FPV6.DirtLevel = 0F
                                        Mechanic.FPV6.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.FPV6.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.FPV6.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        Mechanic.FPV6.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                        Mechanic.FPV6.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        Mechanic.FPV6.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                        Mechanic.FPV6.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.FPV6.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV6, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                        Mechanic.FPV6.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.FPV6.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.FPV6.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV6.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV6.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                        Mechanic.FPV6.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.FPV6.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV6.ToggleMod(VehicleToggleMod.Turbo, True)
                                        Mechanic.FPV6.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV6, False)
                                        Mechanic.FPV6.MarkAsNoLongerNeeded()
                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV6, True, False)
                                        Mechanic.FPV6.AddBlip()
                                        Mechanic.FPV6.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                        Mechanic.FPV6.CurrentBlip.Color = BlipColor.Green
                                        Mechanic.FPV6.CurrentBlip.IsShortRange = True
                                        SetBlipName(Mechanic.FPV6.FriendlyName, Mechanic.FPV6.CurrentBlip)
                                        playerPed.SetIntoVehicle(Mechanic.FPV6, VehicleSeat.Driver)
                                    Else
                                        If Mechanic.FPV7 = Nothing Then
                                            Mechanic.FPV7 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                            Mechanic.FPV7.Heading = lastLocationGarageOutHeading
                                            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV7, 0)
                                            Mechanic.FPV7.DirtLevel = 0F
                                            Mechanic.FPV7.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.FPV7.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.FPV7.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            Mechanic.FPV7.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                            If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                            If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                            If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                            Mechanic.FPV7.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            Mechanic.FPV7.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                            Mechanic.FPV7.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.FPV7.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV7, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                            Mechanic.FPV7.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.FPV7.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.FPV7.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV7.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                            If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV7.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                            Mechanic.FPV7.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.FPV7.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                            If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV7.ToggleMod(VehicleToggleMod.Turbo, True)
                                            Mechanic.FPV7.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV7, False)
                                            Mechanic.FPV7.MarkAsNoLongerNeeded()
                                            Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV7, True, False)
                                            Mechanic.FPV7.AddBlip()
                                            Mechanic.FPV7.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                            Mechanic.FPV7.CurrentBlip.Color = BlipColor.Green
                                            Mechanic.FPV7.CurrentBlip.IsShortRange = True
                                            SetBlipName(Mechanic.FPV7.FriendlyName, Mechanic.FPV7.CurrentBlip)
                                            playerPed.SetIntoVehicle(Mechanic.FPV7, VehicleSeat.Driver)
                                        Else
                                            If Mechanic.FPV8 = Nothing Then
                                                Mechanic.FPV8 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                Mechanic.FPV8.Heading = lastLocationGarageOutHeading
                                                Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV8, 0)
                                                Mechanic.FPV8.DirtLevel = 0F
                                                Mechanic.FPV8.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.FPV8.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.FPV8.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                Mechanic.FPV8.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                Mechanic.FPV8.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                Mechanic.FPV8.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                Mechanic.FPV8.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.FPV8.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV8, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                Mechanic.FPV8.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.FPV8.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.FPV8.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV8.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV8.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                Mechanic.FPV8.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.FPV8.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV8.ToggleMod(VehicleToggleMod.Turbo, True)
                                                Mechanic.FPV8.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV8, False)
                                                Mechanic.FPV8.MarkAsNoLongerNeeded()
                                                Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV8, True, False)
                                                Mechanic.FPV8.AddBlip()
                                                Mechanic.FPV8.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                Mechanic.FPV8.CurrentBlip.Color = BlipColor.Green
                                                Mechanic.FPV8.CurrentBlip.IsShortRange = True
                                                SetBlipName(Mechanic.FPV8.FriendlyName, Mechanic.FPV8.CurrentBlip)
                                                playerPed.SetIntoVehicle(Mechanic.FPV8, VehicleSeat.Driver)
                                            Else
                                                If Mechanic.FPV9 = Nothing Then
                                                    Mechanic.FPV9 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                    Mechanic.FPV9.Heading = lastLocationGarageOutHeading
                                                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV9, 0)
                                                    Mechanic.FPV9.DirtLevel = 0F
                                                    Mechanic.FPV9.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.FPV9.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.FPV9.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    Mechanic.FPV9.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                    Mechanic.FPV9.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    Mechanic.FPV9.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                    Mechanic.FPV9.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.FPV9.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV9, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                    Mechanic.FPV9.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.FPV9.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.FPV9.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV9.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV9.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.FPV9.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV9.ToggleMod(VehicleToggleMod.Turbo, True)
                                                    Mechanic.FPV9.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV9, False)
                                                    Mechanic.FPV9.MarkAsNoLongerNeeded()
                                                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV9, True, False)
                                                    Mechanic.FPV9.AddBlip()
                                                    Mechanic.FPV9.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                    Mechanic.FPV9.CurrentBlip.Color = BlipColor.Green
                                                    Mechanic.FPV9.CurrentBlip.IsShortRange = True
                                                    SetBlipName(Mechanic.FPV9.FriendlyName, Mechanic.FPV9.CurrentBlip)
                                                    playerPed.SetIntoVehicle(Mechanic.FPV9, VehicleSeat.Driver)
                                                Else
                                                    If Mechanic.FPV0 = Nothing Then
                                                        Mechanic.FPV0 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                        Mechanic.FPV0.Heading = lastLocationGarageOutHeading
                                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV0, 0)
                                                        Mechanic.FPV0.DirtLevel = 0F
                                                        Mechanic.FPV0.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.FPV0.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                        Mechanic.FPV0.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.FPV0.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.FPV0.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV0, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.FPV0.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.ToggleMod(VehicleToggleMod.Turbo, True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV0, False)
                                                        Mechanic.FPV0.MarkAsNoLongerNeeded()
                                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV0, True, False)
                                                        Mechanic.FPV0.AddBlip()
                                                        Mechanic.FPV0.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                        Mechanic.FPV0.CurrentBlip.Color = BlipColor.Green
                                                        Mechanic.FPV0.CurrentBlip.IsShortRange = True
                                                        SetBlipName(Mechanic.FPV0.FriendlyName, Mechanic.FPV0.CurrentBlip)
                                                        playerPed.SetIntoVehicle(Mechanic.FPV0, VehicleSeat.Driver)
                                                    Else
                                                        Mechanic.FPV0 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                        Mechanic.FPV0.Heading = lastLocationGarageOutHeading
                                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.FPV0, 0)
                                                        Mechanic.FPV0.DirtLevel = 0F
                                                        Mechanic.FPV0.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.FPV0.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                        Mechanic.FPV0.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.FPV0.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.FPV0.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.FPV0, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.FPV0.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.FPV0.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.FPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.FPV0.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.FPV0.ToggleMod(VehicleToggleMod.Turbo, True)
                                                        Mechanic.FPV0.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.FPV0, False)
                                                        Mechanic.FPV0.MarkAsNoLongerNeeded()
                                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.FPV0, True, False)
                                                        Mechanic.FPV0.AddBlip()
                                                        Mechanic.FPV0.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                        Mechanic.FPV0.CurrentBlip.Color = BlipColor.Green
                                                        Mechanic.FPV0.CurrentBlip.IsShortRange = True
                                                        SetBlipName(Mechanic.FPV0.FriendlyName, Mechanic.FPV0.CurrentBlip)
                                                        playerPed.SetIntoVehicle(Mechanic.FPV0, VehicleSeat.Driver)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
            ElseIf playerName = "Trevor" Then
                If Mechanic.TPV1 = Nothing Then
                    Mechanic.TPV1 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                    Mechanic.TPV1.Heading = lastLocationGarageOutHeading
                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV1, 0)
                    Mechanic.TPV1.DirtLevel = 0F
                    Mechanic.TPV1.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.TPV1.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.TPV1.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    Mechanic.TPV1.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.SetNeonLightsOn(VehicleNeonLight.Back, True)
                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.SetNeonLightsOn(VehicleNeonLight.Front, True)
                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.SetNeonLightsOn(VehicleNeonLight.Left, True)
                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.SetNeonLightsOn(VehicleNeonLight.Right, True)
                    Mechanic.TPV1.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                    Mechanic.TPV1.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                    Mechanic.TPV1.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.TPV1.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV1, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                    Mechanic.TPV1.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.TPV1.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                    Mechanic.TPV1.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV1.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV1.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                    Mechanic.TPV1.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    Mechanic.TPV1.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV1.ToggleMod(VehicleToggleMod.Turbo, True)
                    Mechanic.TPV1.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV1, False)
                    Mechanic.TPV1.MarkAsNoLongerNeeded()
                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV1, True, False)
                    Mechanic.TPV1.AddBlip()
                    Mechanic.TPV1.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                    Mechanic.TPV1.CurrentBlip.Color = 17
                    Mechanic.TPV1.CurrentBlip.IsShortRange = True
                    SetBlipName(Mechanic.TPV1.FriendlyName, Mechanic.TPV1.CurrentBlip)
                    playerPed.SetIntoVehicle(Mechanic.TPV1, VehicleSeat.Driver)
                Else
                    If Mechanic.TPV2 = Nothing Then
                        Mechanic.TPV2 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                        Mechanic.TPV2.Heading = lastLocationGarageOutHeading
                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV2, 0)
                        Mechanic.TPV2.DirtLevel = 0F
                        Mechanic.TPV2.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.TPV2.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.TPV2.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        Mechanic.TPV2.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.SetNeonLightsOn(VehicleNeonLight.Back, True)
                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.SetNeonLightsOn(VehicleNeonLight.Front, True)
                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.SetNeonLightsOn(VehicleNeonLight.Left, True)
                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.SetNeonLightsOn(VehicleNeonLight.Right, True)
                        Mechanic.TPV2.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                        Mechanic.TPV2.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                        Mechanic.TPV2.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.TPV2.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV2, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                        Mechanic.TPV2.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.TPV2.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                        Mechanic.TPV2.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV2.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV2.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                        Mechanic.TPV2.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        Mechanic.TPV2.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV2.ToggleMod(VehicleToggleMod.Turbo, True)
                        Mechanic.TPV2.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV2, False)
                        Mechanic.TPV2.MarkAsNoLongerNeeded()
                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV2, True, False)
                        Mechanic.TPV2.AddBlip()
                        Mechanic.TPV2.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                        Mechanic.TPV2.CurrentBlip.Color = 17
                        Mechanic.TPV2.CurrentBlip.IsShortRange = True
                        SetBlipName(Mechanic.TPV2.FriendlyName, Mechanic.TPV2.CurrentBlip)
                        playerPed.SetIntoVehicle(Mechanic.TPV2, VehicleSeat.Driver)
                    Else
                        If Mechanic.TPV3 = Nothing Then
                            Mechanic.TPV3 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                            Mechanic.TPV3.Heading = lastLocationGarageOutHeading
                            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV3, 0)
                            Mechanic.TPV3.DirtLevel = 0F
                            Mechanic.TPV3.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.TPV3.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.TPV3.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            Mechanic.TPV3.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.SetNeonLightsOn(VehicleNeonLight.Back, True)
                            If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.SetNeonLightsOn(VehicleNeonLight.Front, True)
                            If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.SetNeonLightsOn(VehicleNeonLight.Left, True)
                            If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.SetNeonLightsOn(VehicleNeonLight.Right, True)
                            Mechanic.TPV3.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                            Mechanic.TPV3.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                            Mechanic.TPV3.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.TPV3.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV3, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                            Mechanic.TPV3.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.TPV3.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                            Mechanic.TPV3.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV3.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                            If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV3.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                            Mechanic.TPV3.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            Mechanic.TPV3.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                            If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV3.ToggleMod(VehicleToggleMod.Turbo, True)
                            Mechanic.TPV3.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                            If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV3, False)
                            Mechanic.TPV3.MarkAsNoLongerNeeded()
                            Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV3, True, False)
                            Mechanic.TPV3.AddBlip()
                            Mechanic.TPV3.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                            Mechanic.TPV3.CurrentBlip.Color = 17
                            Mechanic.TPV3.CurrentBlip.IsShortRange = True
                            SetBlipName(Mechanic.TPV3.FriendlyName, Mechanic.TPV3.CurrentBlip)
                            playerPed.SetIntoVehicle(Mechanic.TPV3, VehicleSeat.Driver)
                        Else
                            If Mechanic.TPV4 = Nothing Then
                                Mechanic.TPV4 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                Mechanic.TPV4.Heading = lastLocationGarageOutHeading
                                Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV4, 0)
                                Mechanic.TPV4.DirtLevel = 0F
                                Mechanic.TPV4.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.TPV4.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.TPV4.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                Mechanic.TPV4.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                Mechanic.TPV4.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                Mechanic.TPV4.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                Mechanic.TPV4.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.TPV4.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV4, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                Mechanic.TPV4.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.TPV4.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                Mechanic.TPV4.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV4.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV4.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                Mechanic.TPV4.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                Mechanic.TPV4.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV4.ToggleMod(VehicleToggleMod.Turbo, True)
                                Mechanic.TPV4.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV4, False)
                                Mechanic.TPV4.MarkAsNoLongerNeeded()
                                Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV4, True, False)
                                Mechanic.TPV4.AddBlip()
                                Mechanic.TPV4.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                Mechanic.TPV4.CurrentBlip.Color = 17
                                Mechanic.TPV4.CurrentBlip.IsShortRange = True
                                SetBlipName(Mechanic.TPV4.FriendlyName, Mechanic.TPV4.CurrentBlip)
                                playerPed.SetIntoVehicle(Mechanic.TPV4, VehicleSeat.Driver)
                            Else
                                If Mechanic.TPV5 = Nothing Then
                                    Mechanic.TPV5 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                    Mechanic.TPV5.Heading = lastLocationGarageOutHeading
                                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV5, 0)
                                    Mechanic.TPV5.DirtLevel = 0F
                                    Mechanic.TPV5.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.TPV5.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.TPV5.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    Mechanic.TPV5.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                    Mechanic.TPV5.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                    Mechanic.TPV5.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                    Mechanic.TPV5.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.TPV5.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV5, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                    Mechanic.TPV5.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.TPV5.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                    Mechanic.TPV5.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV5.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV5.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                    Mechanic.TPV5.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    Mechanic.TPV5.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV5.ToggleMod(VehicleToggleMod.Turbo, True)
                                    Mechanic.TPV5.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV5, False)
                                    Mechanic.TPV5.MarkAsNoLongerNeeded()
                                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV5, True, False)
                                    Mechanic.TPV5.AddBlip()
                                    Mechanic.TPV5.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                    Mechanic.TPV5.CurrentBlip.Color = 17
                                    Mechanic.TPV5.CurrentBlip.IsShortRange = True
                                    SetBlipName(Mechanic.TPV5.FriendlyName, Mechanic.TPV5.CurrentBlip)
                                    playerPed.SetIntoVehicle(Mechanic.TPV5, VehicleSeat.Driver)
                                Else
                                    If Mechanic.TPV6 = Nothing Then
                                        Mechanic.TPV6 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                        Mechanic.TPV6.Heading = lastLocationGarageOutHeading
                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV6, 0)
                                        Mechanic.TPV6.DirtLevel = 0F
                                        Mechanic.TPV6.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.TPV6.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.TPV6.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        Mechanic.TPV6.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                        Mechanic.TPV6.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                        Mechanic.TPV6.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                        Mechanic.TPV6.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.TPV6.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV6, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                        Mechanic.TPV6.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.TPV6.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                        Mechanic.TPV6.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV6.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV6.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                        Mechanic.TPV6.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        Mechanic.TPV6.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV6.ToggleMod(VehicleToggleMod.Turbo, True)
                                        Mechanic.TPV6.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV6, False)
                                        Mechanic.TPV6.MarkAsNoLongerNeeded()
                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV6, True, False)
                                        Mechanic.TPV6.AddBlip()
                                        Mechanic.TPV6.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                        Mechanic.TPV6.CurrentBlip.Color = 17
                                        Mechanic.TPV6.CurrentBlip.IsShortRange = True
                                        SetBlipName(Mechanic.TPV6.FriendlyName, Mechanic.TPV6.CurrentBlip)
                                        playerPed.SetIntoVehicle(Mechanic.TPV6, VehicleSeat.Driver)
                                    Else
                                        If Mechanic.TPV7 = Nothing Then
                                            Mechanic.TPV7 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                            Mechanic.TPV7.Heading = lastLocationGarageOutHeading
                                            Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV7, 0)
                                            Mechanic.TPV7.DirtLevel = 0F
                                            Mechanic.TPV7.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.TPV7.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.TPV7.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            Mechanic.TPV7.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                            If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                            If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                            If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                            Mechanic.TPV7.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                            Mechanic.TPV7.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                            Mechanic.TPV7.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.TPV7.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV7, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                            Mechanic.TPV7.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.TPV7.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                            Mechanic.TPV7.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV7.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                            If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV7.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                            Mechanic.TPV7.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            Mechanic.TPV7.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                            If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV7.ToggleMod(VehicleToggleMod.Turbo, True)
                                            Mechanic.TPV7.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                            If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV7, False)
                                            Mechanic.TPV7.MarkAsNoLongerNeeded()
                                            Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV7, True, False)
                                            Mechanic.TPV7.AddBlip()
                                            Mechanic.TPV7.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                            Mechanic.TPV7.CurrentBlip.Color = 17
                                            Mechanic.TPV7.CurrentBlip.IsShortRange = True
                                            SetBlipName(Mechanic.TPV7.FriendlyName, Mechanic.TPV7.CurrentBlip)
                                            playerPed.SetIntoVehicle(Mechanic.TPV7, VehicleSeat.Driver)
                                        Else
                                            If Mechanic.TPV8 = Nothing Then
                                                Mechanic.TPV8 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                Mechanic.TPV8.Heading = lastLocationGarageOutHeading
                                                Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV8, 0)
                                                Mechanic.TPV8.DirtLevel = 0F
                                                Mechanic.TPV8.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.TPV8.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.TPV8.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                Mechanic.TPV8.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                Mechanic.TPV8.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                Mechanic.TPV8.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                Mechanic.TPV8.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.TPV8.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV8, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                Mechanic.TPV8.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.TPV8.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                Mechanic.TPV8.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV8.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV8.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                Mechanic.TPV8.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                Mechanic.TPV8.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV8.ToggleMod(VehicleToggleMod.Turbo, True)
                                                Mechanic.TPV8.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV8, False)
                                                Mechanic.TPV8.MarkAsNoLongerNeeded()
                                                Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV8, True, False)
                                                Mechanic.TPV8.AddBlip()
                                                Mechanic.TPV8.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                Mechanic.TPV8.CurrentBlip.Color = 17
                                                Mechanic.TPV8.CurrentBlip.IsShortRange = True
                                                SetBlipName(Mechanic.TPV8.FriendlyName, Mechanic.TPV8.CurrentBlip)
                                                playerPed.SetIntoVehicle(Mechanic.TPV8, VehicleSeat.Driver)
                                            Else
                                                If Mechanic.TPV9 = Nothing Then
                                                    Mechanic.TPV9 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                    Mechanic.TPV9.Heading = lastLocationGarageOutHeading
                                                    Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV9, 0)
                                                    Mechanic.TPV9.DirtLevel = 0F
                                                    Mechanic.TPV9.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.TPV9.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.TPV9.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    Mechanic.TPV9.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                    If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                    If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                    If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                    Mechanic.TPV9.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                    Mechanic.TPV9.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                    Mechanic.TPV9.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.TPV9.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV9, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                    Mechanic.TPV9.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.TPV9.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                    Mechanic.TPV9.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV9.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                    If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV9.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    Mechanic.TPV9.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                    If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV9.ToggleMod(VehicleToggleMod.Turbo, True)
                                                    Mechanic.TPV9.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                    If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV9, False)
                                                    Mechanic.TPV9.MarkAsNoLongerNeeded()
                                                    Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV9, True, False)
                                                    Mechanic.TPV9.AddBlip()
                                                    Mechanic.TPV9.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                    Mechanic.TPV9.CurrentBlip.Color = 17
                                                    Mechanic.TPV9.CurrentBlip.IsShortRange = True
                                                    SetBlipName(Mechanic.TPV9.FriendlyName, Mechanic.TPV9.CurrentBlip)
                                                    playerPed.SetIntoVehicle(Mechanic.TPV9, VehicleSeat.Driver)
                                                Else
                                                    If Mechanic.TPV0 = Nothing Then
                                                        Mechanic.TPV0 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                        Mechanic.TPV0.Heading = lastLocationGarageOutHeading
                                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV0, 0)
                                                        Mechanic.TPV0.DirtLevel = 0F
                                                        Mechanic.TPV0.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.TPV0.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                        Mechanic.TPV0.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.TPV0.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.TPV0.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV0, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.TPV0.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.ToggleMod(VehicleToggleMod.Turbo, True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV0, False)
                                                        Mechanic.TPV0.MarkAsNoLongerNeeded()
                                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV0, True, False)
                                                        Mechanic.TPV0.AddBlip()
                                                        Mechanic.TPV0.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                        Mechanic.TPV0.CurrentBlip.Color = 17
                                                        Mechanic.TPV0.CurrentBlip.IsShortRange = True
                                                        SetBlipName(Mechanic.TPV0.FriendlyName, Mechanic.TPV0.CurrentBlip)
                                                        playerPed.SetIntoVehicle(Mechanic.TPV0, VehicleSeat.Driver)
                                                    Else
                                                        Mechanic.TPV0 = World.CreateVehicle(ReadCfgValue("VehicleModel", CurrentPath & "vehicle_" & PPCV & ".cfg"), lastLocationGarageOutVector)
                                                        Mechanic.TPV0.Heading = lastLocationGarageOutHeading
                                                        Native.Function.Call(Hash.SET_VEHICLE_MOD_KIT, Mechanic.TPV0, 0)
                                                        Mechanic.TPV0.DirtLevel = 0F
                                                        Mechanic.TPV0.PrimaryColor = ReadCfgValue("PrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.SecondaryColor = ReadCfgValue("SecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.PearlescentColor = ReadCfgValue("PearlescentColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasCustomPrimaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.CustomPrimaryColor = Color.FromArgb(ReadCfgValue("CustomPrimaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomPrimaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        If ReadCfgValue("HasCustomSecondaryColor", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.CustomSecondaryColor = Color.FromArgb(ReadCfgValue("CustomSecondaryColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("CustomSecondaryColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.TPV0.RimColor = ReadCfgValue("RimColor", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        If ReadCfgValue("HasNeonLightBack", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Back, True)
                                                        If ReadCfgValue("HasNeonLightFront", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Front, True)
                                                        If ReadCfgValue("HasNeonLightLeft", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Left, True)
                                                        If ReadCfgValue("HasNeonLightRight", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetNeonLightsOn(VehicleNeonLight.Right, True)
                                                        Mechanic.TPV0.NeonLightsColor = Color.FromArgb(ReadCfgValue("NeonColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg"), ReadCfgValue("NeonColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg"))
                                                        Mechanic.TPV0.TireSmokeColor = Color.FromArgb(CInt(ReadCfgValue("TyreSmokeColorRed", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorGreen", CurrentPath & "vehicle_" & PPCV & ".cfg")), CInt(ReadCfgValue("TyreSmokeColorBlue", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.TPV0.WheelType = ReadCfgValue("WheelType", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.Livery = ReadCfgValue("Livery", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Native.Function.Call(Hash.SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX, Mechanic.TPV0, CInt(ReadCfgValue("PlateType", CurrentPath & "vehicle_" & PPCV & ".cfg")))
                                                        Mechanic.TPV0.NumberPlate = ReadCfgValue("PlateNumber", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.WindowTint = ReadCfgValue("WindowTint", CurrentPath & "vehicle_" & PPCV & ".cfg")
                                                        Mechanic.TPV0.SetMod(VehicleMod.Spoilers, ReadCfgValue("Spoiler", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.FrontBumper, ReadCfgValue("FrontBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.RearBumper, ReadCfgValue("RearBumper", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.SideSkirt, ReadCfgValue("SideSkirt", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Frame, ReadCfgValue("Frame", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Grille, ReadCfgValue("Grille", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Hood, ReadCfgValue("Hood", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Fender, ReadCfgValue("Fender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.RightFender, ReadCfgValue("RightFender", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Roof, ReadCfgValue("Roof", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Exhaust, ReadCfgValue("Exhaust", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("FrontTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV0.SetMod(VehicleMod.FrontWheels, ReadCfgValue("FrontWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        If ReadCfgValue("BackTireVariation", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), True) Else Mechanic.TPV0.SetMod(VehicleMod.BackWheels, ReadCfgValue("BackWheels", CurrentPath & "vehicle_" & PPCV & ".cfg"), False)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Suspension, ReadCfgValue("Suspension", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Engine, ReadCfgValue("Engine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Brakes, ReadCfgValue("Brakes", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Transmission, ReadCfgValue("Transmission", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Armor, ReadCfgValue("Armor", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(25, ReadCfgValue("TwentyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(26, ReadCfgValue("TwentySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(27, ReadCfgValue("TwentySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(28, ReadCfgValue("TwentyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(29, ReadCfgValue("TwentyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(30, ReadCfgValue("Thirty", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(31, ReadCfgValue("ThirtyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(32, ReadCfgValue("ThirtyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(33, ReadCfgValue("ThirtyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(34, ReadCfgValue("ThirtyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(35, ReadCfgValue("ThirtyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(36, ReadCfgValue("ThirtySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(37, ReadCfgValue("ThirtySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(38, ReadCfgValue("ThirtyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(39, ReadCfgValue("ThirtyNine", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(40, ReadCfgValue("Forthy", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(41, ReadCfgValue("ForthyOne", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(42, ReadCfgValue("ForthyTwo", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(43, ReadCfgValue("ForthyThree", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(44, ReadCfgValue("ForthyFour", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(45, ReadCfgValue("ForthyFive", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(46, ReadCfgValue("ForthySix", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(47, ReadCfgValue("ForthySeven", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        Mechanic.TPV0.SetMod(48, ReadCfgValue("ForthyEight", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("XenonHeadlights", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.ToggleMod(VehicleToggleMod.XenonHeadlights, True)
                                                        If ReadCfgValue("Turbo", CurrentPath & "vehicle_" & PPCV & ".cfg") = "True" Then Mechanic.TPV0.ToggleMod(VehicleToggleMod.Turbo, True)
                                                        Mechanic.TPV0.SetMod(VehicleMod.Horns, ReadCfgValue("Horn", CurrentPath & "vehicle_" & PPCV & ".cfg"), True)
                                                        If ReadCfgValue("BulletproofTyres", CurrentPath & "vehicle_" & PPCV & ".cfg") = "False" Then Native.Function.Call(Hash.SET_VEHICLE_TYRES_CAN_BURST, Mechanic.TPV0, False)
                                                        Mechanic.TPV0.MarkAsNoLongerNeeded()
                                                        Native.Function.Call(Hash.SET_ENTITY_AS_MISSION_ENTITY, Mechanic.TPV0, True, False)
                                                        Mechanic.TPV0.AddBlip()
                                                        Mechanic.TPV0.CurrentBlip.Sprite = BlipSprite.PersonalVehicleCar
                                                        Mechanic.TPV0.CurrentBlip.Color = 17
                                                        Mechanic.TPV0.CurrentBlip.IsShortRange = True
                                                        SetBlipName(Mechanic.TPV0.FriendlyName, Mechanic.TPV0.CurrentBlip)
                                                        playerPed.SetIntoVehicle(Mechanic.TPV0, VehicleSeat.Driver)
                                                    End If
                                                End If
                                            End If
                                        End If
                                    End If
                                End If
                            End If
                        End If
                    End If
                End If
            End If

            playerPed.CurrentVehicle.Repair()
            playerPed.CurrentVehicle.Position = lastLocationGarageOutVector
            playerPed.CurrentVehicle.Heading = lastLocationGarageOutHeading
            isInGarage = False
            Script.Wait(500)
            Game.FadeScreenIn(500)
            UnLoadMPDLCMap()
        End If

        If Game.IsControlJustPressed(0, GTA.Control.Context) AndAlso Not playerPed.IsInVehicle AndAlso ElevatorDistance < 3.0 Then
            Game.FadeScreenOut(500)
            Script.Wait(&H3E8)
            isInGarage = False
            playerPed.Position = lastLocationVector
            SinglePlayerApartment.player.LastVehicle.Delete()
            Script.Wait(500)
            Game.FadeScreenIn(500)
        End If

        If Game.IsControlJustPressed(0, GTA.Control.Context) AndAlso Not playerPed.IsInVehicle AndAlso (GarageDoorLDistance < 3.0 Or GarageDoorRDistance < 3.0) Then
            Game.FadeScreenOut(500)
            Script.Wait(&H3E8)
            isInGarage = False
            playerPed.Position = lastLocationGarageVector
            SinglePlayerApartment.player.LastVehicle.Delete()
            Script.Wait(500)
            Game.FadeScreenIn(500)
            UnLoadMPDLCMap()
        End If

        If Game.IsControlJustPressed(0, GTA.Control.Context) AndAlso GarageMarkerDistance < 3.0 Then
            Mechanic.GarageMenu.Visible = True
        End If
    End Sub

    Protected Overrides Sub Dispose(A_0 As Boolean)
        If (A_0) Then
            Try
                If Not veh0 = Nothing Then veh0.Delete()
                If Not veh1 = Nothing Then veh1.Delete()
                If Not veh2 = Nothing Then veh2.Delete()
                If Not veh3 = Nothing Then veh3.Delete()
                If Not veh4 = Nothing Then veh4.Delete()
                If Not veh5 = Nothing Then veh5.Delete()
            Catch ex As Exception
            End Try
        End If
    End Sub
End Class
